// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* postivoService.h
   Generated by wsdl2h 2.8.70 from https://api.postivo.pl/webservices.php?wsdl and typemap.dat
   2018-08-31 20:20:35 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on postivoService.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -Onum to optimize output by removing unused schema components.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://api.postivo.pl/webservices.php                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://api.postivo.pl/webservices.php"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://api.postivo.pl/webservices.php"
//gsoap ns1   schema namespace:	http://api.postivo.pl/webservices.php
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://api.postivo.pl/webservices.php                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://api.postivo.pl/webservices.php                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://api.postivo.pl/webservices.php":DocumentFile is a complexType.
///
/// struct ns1__DocumentFile operations:
/// - ns1__DocumentFile* soap_new_ns1__DocumentFile(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__DocumentFile(struct soap*, ns1__DocumentFile*) default initialize members
/// - int soap_read_ns1__DocumentFile(struct soap*, ns1__DocumentFile*) deserialize from a source
/// - int soap_write_ns1__DocumentFile(struct soap*, ns1__DocumentFile*) serialize to a sink
/// - ns1__DocumentFile* soap_dup_ns1__DocumentFile(struct soap*, ns1__DocumentFile* dst, ns1__DocumentFile *src) returns deep copy of ns1__DocumentFile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__DocumentFile(ns1__DocumentFile*) deep deletes ns1__DocumentFile data members, use only on dst after soap_dup_ns1__DocumentFile(NULL, ns1__DocumentFile *dst, ns1__DocumentFile *src) (use soapcpp2 -Ed)
struct ns1__DocumentFile
{
/// Element "file_stream" of XSD type xs:string.
    char*                                file_USCOREstream              1;	///< Required element.
/// Element "file_name" of XSD type xs:string.
    char*                                file_USCOREname                1;	///< Required element.
};

/// @brief "http://api.postivo.pl/webservices.php":Recipient is a complexType.
///
/// struct ns1__Recipient operations:
/// - ns1__Recipient* soap_new_ns1__Recipient(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__Recipient(struct soap*, ns1__Recipient*) default initialize members
/// - int soap_read_ns1__Recipient(struct soap*, ns1__Recipient*) deserialize from a source
/// - int soap_write_ns1__Recipient(struct soap*, ns1__Recipient*) serialize to a sink
/// - ns1__Recipient* soap_dup_ns1__Recipient(struct soap*, ns1__Recipient* dst, ns1__Recipient *src) returns deep copy of ns1__Recipient src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__Recipient(ns1__Recipient*) deep deletes ns1__Recipient data members, use only on dst after soap_dup_ns1__Recipient(NULL, ns1__Recipient *dst, ns1__Recipient *src) (use soapcpp2 -Ed)
struct ns1__Recipient
{
/// Element "source" of XSD type xs:string.
    char*                                source                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "id" of XSD type xs:int.
    int*                                 id                             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "recipient_name" of XSD type xs:string.
    char*                                recipient_USCOREname           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "recipient_address_prefix" of XSD type xs:string.
    char*                                recipient_USCOREaddress_USCOREprefix nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "recipient_address" of XSD type xs:string.
    char*                                recipient_USCOREaddress        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "recipient_home_number" of XSD type xs:string.
    char*                                recipient_USCOREhome_USCOREnumber nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "recipient_flat_number" of XSD type xs:string.
    char*                                recipient_USCOREflat_USCOREnumber nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "recipient_post_code" of XSD type xs:string.
    char*                                recipient_USCOREpost_USCOREcode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "recipient_city" of XSD type xs:string.
    char*                                recipient_USCOREcity           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "recipient_country" of XSD type xs:string.
    char*                                recipient_USCOREcountry        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "recipient_fax_number" of XSD type xs:string.
    char*                                recipient_USCOREfax_USCOREnumber nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
};

/// @brief "http://api.postivo.pl/webservices.php":Option is a complexType.
///
/// struct ns1__Option operations:
/// - ns1__Option* soap_new_ns1__Option(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__Option(struct soap*, ns1__Option*) default initialize members
/// - int soap_read_ns1__Option(struct soap*, ns1__Option*) deserialize from a source
/// - int soap_write_ns1__Option(struct soap*, ns1__Option*) serialize to a sink
/// - ns1__Option* soap_dup_ns1__Option(struct soap*, ns1__Option* dst, ns1__Option *src) returns deep copy of ns1__Option src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__Option(ns1__Option*) deep deletes ns1__Option data members, use only on dst after soap_dup_ns1__Option(NULL, ns1__Option *dst, ns1__Option *src) (use soapcpp2 -Ed)
struct ns1__Option
{
/// Element "name" of XSD type xs:string.
    char*                                name                           1;	///< Required element.
/// Element "value" of XSD type xs:string.
    char*                                value                          1;	///< Required element.
};

/// @brief "http://api.postivo.pl/webservices.php":Shipment is a complexType.
///
/// struct ns1__Shipment operations:
/// - ns1__Shipment* soap_new_ns1__Shipment(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__Shipment(struct soap*, ns1__Shipment*) default initialize members
/// - int soap_read_ns1__Shipment(struct soap*, ns1__Shipment*) deserialize from a source
/// - int soap_write_ns1__Shipment(struct soap*, ns1__Shipment*) serialize to a sink
/// - ns1__Shipment* soap_dup_ns1__Shipment(struct soap*, ns1__Shipment* dst, ns1__Shipment *src) returns deep copy of ns1__Shipment src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__Shipment(ns1__Shipment*) deep deletes ns1__Shipment data members, use only on dst after soap_dup_ns1__Shipment(NULL, ns1__Shipment *dst, ns1__Shipment *src) (use soapcpp2 -Ed)
struct ns1__Shipment
{
/// Element "id" of XSD type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element "custom_id" of XSD type xs:string.
    char*                                custom_USCOREid                0;	///< Optional element.
/// Element "recipient_name" of XSD type xs:string.
    char*                                recipient_USCOREname           0;	///< Optional element.
/// Element "recipient_address" of XSD type xs:string.
    char*                                recipient_USCOREaddress        0;	///< Optional element.
/// Element "recipient_home_number" of XSD type xs:string.
    char*                                recipient_USCOREhome_USCOREnumber 0;	///< Optional element.
/// Element "recipient_flat_number" of XSD type xs:string.
    char*                                recipient_USCOREflat_USCOREnumber 0;	///< Optional element.
/// Element "recipient_post_code" of XSD type xs:string.
    char*                                recipient_USCOREpost_USCOREcode 0;	///< Optional element.
/// Element "recipient_city" of XSD type xs:string.
    char*                                recipient_USCOREcity           0;	///< Optional element.
/// Element "recipient_country" of XSD type xs:string.
    char*                                recipient_USCOREcountry        0;	///< Optional element.
/// Element "recipient_fax_number" of XSD type xs:string.
    char*                                recipient_USCOREfax_USCOREnumber 0;	///< Optional element.
/// Element "dispatch_carrier" of XSD type xs:string.
    char*                                dispatch_USCOREcarrier         0;	///< Optional element.
/// Element "dispatch_type" of XSD type xs:string.
    char*                                dispatch_USCOREtype            0;	///< Optional element.
/// Element "page_number" of XSD type xs:int.
    int*                                 page_USCOREnumber              0;	///< Optional element.
/// Element "price" of XSD type xs:float.
    float*                               price                          0;	///< Optional element.
/// Element "status" of XSD type xs:string.
    char*                                status                         0;	///< Optional element.
/// Element "status_code" of XSD type xs:string.
    char*                                status_USCOREcode              0;	///< Optional element.
/// Element "status_description" of XSD type xs:string.
    char*                                status_USCOREdescription       0;	///< Optional element.
};

/// @brief "http://api.postivo.pl/webservices.php":ConfigProfile is a complexType.
///
/// struct ns1__ConfigProfile operations:
/// - ns1__ConfigProfile* soap_new_ns1__ConfigProfile(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__ConfigProfile(struct soap*, ns1__ConfigProfile*) default initialize members
/// - int soap_read_ns1__ConfigProfile(struct soap*, ns1__ConfigProfile*) deserialize from a source
/// - int soap_write_ns1__ConfigProfile(struct soap*, ns1__ConfigProfile*) serialize to a sink
/// - ns1__ConfigProfile* soap_dup_ns1__ConfigProfile(struct soap*, ns1__ConfigProfile* dst, ns1__ConfigProfile *src) returns deep copy of ns1__ConfigProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__ConfigProfile(ns1__ConfigProfile*) deep deletes ns1__ConfigProfile data members, use only on dst after soap_dup_ns1__ConfigProfile(NULL, ns1__ConfigProfile *dst, ns1__ConfigProfile *src) (use soapcpp2 -Ed)
struct ns1__ConfigProfile
{
/// Element "config_id" of XSD type xs:int.
    int*                                 config_USCOREid                0;	///< Optional element.
/// Element "config_name" of XSD type xs:string.
    char*                                config_USCOREname              0;	///< Optional element.
/// Element "paper_type" of XSD type xs:string.
    char*                                paper_USCOREtype               0;	///< Optional element.
/// Element "paper_print_type" of XSD type xs:string.
    char*                                paper_USCOREprint_USCOREtype   0;	///< Optional element.
/// Element "envelope_type" of XSD type xs:string.
    char*                                envelope_USCOREtype            0;	///< Optional element.
/// Element "envelope_template" of XSD type xs:string.
    char*                                envelope_USCOREtemplate        0;	///< Optional element.
/// Element "envelope_print_type" of XSD type xs:string.
    char*                                envelope_USCOREprint_USCOREtype 0;	///< Optional element.
/// Element "carrier" of XSD type xs:string.
    char*                                carrier                        0;	///< Optional element.
/// Element "dispatch_type" of XSD type xs:string.
    char*                                dispatch_USCOREtype            0;	///< Optional element.
};

/// @brief "http://api.postivo.pl/webservices.php":Sender is a complexType.
///
/// struct ns1__Sender operations:
/// - ns1__Sender* soap_new_ns1__Sender(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__Sender(struct soap*, ns1__Sender*) default initialize members
/// - int soap_read_ns1__Sender(struct soap*, ns1__Sender*) deserialize from a source
/// - int soap_write_ns1__Sender(struct soap*, ns1__Sender*) serialize to a sink
/// - ns1__Sender* soap_dup_ns1__Sender(struct soap*, ns1__Sender* dst, ns1__Sender *src) returns deep copy of ns1__Sender src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__Sender(ns1__Sender*) deep deletes ns1__Sender data members, use only on dst after soap_dup_ns1__Sender(NULL, ns1__Sender *dst, ns1__Sender *src) (use soapcpp2 -Ed)
struct ns1__Sender
{
/// Element "sender_id" of XSD type xs:int.
    int*                                 sender_USCOREid                0;	///< Optional element.
/// Element "sender_name" of XSD type xs:string.
    char*                                sender_USCOREname              0;	///< Optional element.
/// Element "sender_address" of XSD type xs:string.
    char*                                sender_USCOREaddress           0;	///< Optional element.
/// Element "sender_home_number" of XSD type xs:string.
    char*                                sender_USCOREhome_USCOREnumber 0;	///< Optional element.
/// Element "sender_flat_number" of XSD type xs:string.
    char*                                sender_USCOREflat_USCOREnumber 0;	///< Optional element.
/// Element "sender_post_code" of XSD type xs:string.
    char*                                sender_USCOREpost_USCOREcode   0;	///< Optional element.
/// Element "sender_city" of XSD type xs:string.
    char*                                sender_USCOREcity              0;	///< Optional element.
/// Element "sender_country" of XSD type xs:string.
    char*                                sender_USCOREcountry           0;	///< Optional element.
/// Element "sender_fax_number" of XSD type xs:string.
    char*                                sender_USCOREfax_USCOREnumber  0;	///< Optional element.
/// Element "default" of XSD type xs:string.
    char*                                default_                       0;	///< Optional element.
/// Element "active" of XSD type xs:string.
    char*                                active                         0;	///< Optional element.
};

/// @brief "http://api.postivo.pl/webservices.php":ShipmentPrice is a complexType.
///
/// struct ns1__ShipmentPrice operations:
/// - ns1__ShipmentPrice* soap_new_ns1__ShipmentPrice(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__ShipmentPrice(struct soap*, ns1__ShipmentPrice*) default initialize members
/// - int soap_read_ns1__ShipmentPrice(struct soap*, ns1__ShipmentPrice*) deserialize from a source
/// - int soap_write_ns1__ShipmentPrice(struct soap*, ns1__ShipmentPrice*) serialize to a sink
/// - ns1__ShipmentPrice* soap_dup_ns1__ShipmentPrice(struct soap*, ns1__ShipmentPrice* dst, ns1__ShipmentPrice *src) returns deep copy of ns1__ShipmentPrice src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__ShipmentPrice(ns1__ShipmentPrice*) deep deletes ns1__ShipmentPrice data members, use only on dst after soap_dup_ns1__ShipmentPrice(NULL, ns1__ShipmentPrice *dst, ns1__ShipmentPrice *src) (use soapcpp2 -Ed)
struct ns1__ShipmentPrice
{
/// Element "recipient_name" of XSD type xs:string.
    char*                                recipient_USCOREname           0;	///< Optional element.
/// Element "recipient_address" of XSD type xs:string.
    char*                                recipient_USCOREaddress        0;	///< Optional element.
/// Element "recipient_home_number" of XSD type xs:string.
    char*                                recipient_USCOREhome_USCOREnumber 0;	///< Optional element.
/// Element "recipient_flat_number" of XSD type xs:string.
    char*                                recipient_USCOREflat_USCOREnumber 0;	///< Optional element.
/// Element "recipient_post_code" of XSD type xs:string.
    char*                                recipient_USCOREpost_USCOREcode 0;	///< Optional element.
/// Element "recipient_city" of XSD type xs:string.
    char*                                recipient_USCOREcity           0;	///< Optional element.
/// Element "recipient_country" of XSD type xs:string.
    char*                                recipient_USCOREcountry        0;	///< Optional element.
/// Element "recipient_fax_number" of XSD type xs:string.
    char*                                recipient_USCOREfax_USCOREnumber 0;	///< Optional element.
/// Element "dispatch_carrier" of XSD type xs:string.
    char*                                dispatch_USCOREcarrier         0;	///< Optional element.
/// Element "dispatch_type" of XSD type xs:string.
    char*                                dispatch_USCOREtype            0;	///< Optional element.
/// Element "page_number" of XSD type xs:int.
    int*                                 page_USCOREnumber              0;	///< Optional element.
/// Element "price" of XSD type xs:float.
    float*                               price                          0;	///< Optional element.
};

/// @brief "http://api.postivo.pl/webservices.php":SenderData is a complexType.
///
/// struct ns1__SenderData operations:
/// - ns1__SenderData* soap_new_ns1__SenderData(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__SenderData(struct soap*, ns1__SenderData*) default initialize members
/// - int soap_read_ns1__SenderData(struct soap*, ns1__SenderData*) deserialize from a source
/// - int soap_write_ns1__SenderData(struct soap*, ns1__SenderData*) serialize to a sink
/// - ns1__SenderData* soap_dup_ns1__SenderData(struct soap*, ns1__SenderData* dst, ns1__SenderData *src) returns deep copy of ns1__SenderData src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__SenderData(ns1__SenderData*) deep deletes ns1__SenderData data members, use only on dst after soap_dup_ns1__SenderData(NULL, ns1__SenderData *dst, ns1__SenderData *src) (use soapcpp2 -Ed)
struct ns1__SenderData
{
/// Element "sender_name" of XSD type xs:string.
    char*                                sender_USCOREname              0;	///< Optional element.
/// Element "sender_address_prefix" of XSD type xs:string.
    char*                                sender_USCOREaddress_USCOREprefix 0;	///< Optional element.
/// Element "sender_address" of XSD type xs:string.
    char*                                sender_USCOREaddress           0;	///< Optional element.
/// Element "sender_home_number" of XSD type xs:string.
    char*                                sender_USCOREhome_USCOREnumber 0;	///< Optional element.
/// Element "sender_flat_number" of XSD type xs:string.
    char*                                sender_USCOREflat_USCOREnumber 0;	///< Optional element.
/// Element "sender_post_code" of XSD type xs:string.
    char*                                sender_USCOREpost_USCOREcode   0;	///< Optional element.
/// Element "sender_city" of XSD type xs:string.
    char*                                sender_USCOREcity              0;	///< Optional element.
/// Element "sender_country" of XSD type xs:string.
    char*                                sender_USCOREcountry           0;	///< Optional element.
/// Element "sender_fax_number" of XSD type xs:string.
    char*                                sender_USCOREfax_USCOREnumber  0;	///< Optional element.
};

/// @brief "http://api.postivo.pl/webservices.php":DispatchReturnObject is a complexType.
///
/// struct ns1__DispatchReturnObject operations:
/// - ns1__DispatchReturnObject* soap_new_ns1__DispatchReturnObject(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__DispatchReturnObject(struct soap*, ns1__DispatchReturnObject*) default initialize members
/// - int soap_read_ns1__DispatchReturnObject(struct soap*, ns1__DispatchReturnObject*) deserialize from a source
/// - int soap_write_ns1__DispatchReturnObject(struct soap*, ns1__DispatchReturnObject*) serialize to a sink
/// - ns1__DispatchReturnObject* soap_dup_ns1__DispatchReturnObject(struct soap*, ns1__DispatchReturnObject* dst, ns1__DispatchReturnObject *src) returns deep copy of ns1__DispatchReturnObject src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__DispatchReturnObject(ns1__DispatchReturnObject*) deep deletes ns1__DispatchReturnObject data members, use only on dst after soap_dup_ns1__DispatchReturnObject(NULL, ns1__DispatchReturnObject *dst, ns1__DispatchReturnObject *src) (use soapcpp2 -Ed)
struct ns1__DispatchReturnObject
{
/// Element "result" of XSD type xs:string.
    char*                                result                         1;	///< Required element.
/// Element "result_code" of XSD type xs:string.
    char*                                result_USCOREcode              1;	///< Required element.
/// Element "result_description" of XSD type xs:string.
    char*                                result_USCOREdescription       1;	///< Required element.
/// Element "shipments" of XSD type "http://api.postivo.pl/webservices.php":ArrayOfShipments.
    struct ArrayOfShipments*             shipments                      1;	///< Required element.
};

/// @brief "http://api.postivo.pl/webservices.php":BalanceReturnObject is a complexType.
///
/// struct ns1__BalanceReturnObject operations:
/// - ns1__BalanceReturnObject* soap_new_ns1__BalanceReturnObject(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__BalanceReturnObject(struct soap*, ns1__BalanceReturnObject*) default initialize members
/// - int soap_read_ns1__BalanceReturnObject(struct soap*, ns1__BalanceReturnObject*) deserialize from a source
/// - int soap_write_ns1__BalanceReturnObject(struct soap*, ns1__BalanceReturnObject*) serialize to a sink
/// - ns1__BalanceReturnObject* soap_dup_ns1__BalanceReturnObject(struct soap*, ns1__BalanceReturnObject* dst, ns1__BalanceReturnObject *src) returns deep copy of ns1__BalanceReturnObject src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__BalanceReturnObject(ns1__BalanceReturnObject*) deep deletes ns1__BalanceReturnObject data members, use only on dst after soap_dup_ns1__BalanceReturnObject(NULL, ns1__BalanceReturnObject *dst, ns1__BalanceReturnObject *src) (use soapcpp2 -Ed)
struct ns1__BalanceReturnObject
{
/// Element "result" of XSD type xs:string.
    char*                                result                         1;	///< Required element.
/// Element "result_code" of XSD type xs:string.
    char*                                result_USCOREcode              1;	///< Required element.
/// Element "result_description" of XSD type xs:string.
    char*                                result_USCOREdescription       1;	///< Required element.
/// Element "balance" of XSD type xs:float.
    float*                               balance                        0;	///< Optional element.
/// Element "limit" of XSD type xs:float.
    float*                               limit                          0;	///< Optional element.
/// Element "postpaid" of XSD type xs:int.
    int*                                 postpaid                       0;	///< Optional element.
};

/// @brief "http://api.postivo.pl/webservices.php":ConfigProfilesReturnObject is a complexType.
///
/// struct ns1__ConfigProfilesReturnObject operations:
/// - ns1__ConfigProfilesReturnObject* soap_new_ns1__ConfigProfilesReturnObject(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__ConfigProfilesReturnObject(struct soap*, ns1__ConfigProfilesReturnObject*) default initialize members
/// - int soap_read_ns1__ConfigProfilesReturnObject(struct soap*, ns1__ConfigProfilesReturnObject*) deserialize from a source
/// - int soap_write_ns1__ConfigProfilesReturnObject(struct soap*, ns1__ConfigProfilesReturnObject*) serialize to a sink
/// - ns1__ConfigProfilesReturnObject* soap_dup_ns1__ConfigProfilesReturnObject(struct soap*, ns1__ConfigProfilesReturnObject* dst, ns1__ConfigProfilesReturnObject *src) returns deep copy of ns1__ConfigProfilesReturnObject src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__ConfigProfilesReturnObject(ns1__ConfigProfilesReturnObject*) deep deletes ns1__ConfigProfilesReturnObject data members, use only on dst after soap_dup_ns1__ConfigProfilesReturnObject(NULL, ns1__ConfigProfilesReturnObject *dst, ns1__ConfigProfilesReturnObject *src) (use soapcpp2 -Ed)
struct ns1__ConfigProfilesReturnObject
{
/// Element "result" of XSD type xs:string.
    char*                                result                         1;	///< Required element.
/// Element "result_code" of XSD type xs:string.
    char*                                result_USCOREcode              1;	///< Required element.
/// Element "result_description" of XSD type xs:string.
    char*                                result_USCOREdescription       1;	///< Required element.
/// Element "config_profiles" of XSD type "http://api.postivo.pl/webservices.php":ArrayOfConfigProfiles.
    struct ArrayOfConfigProfiles*        config_USCOREprofiles          0;	///< Optional element.
};

/// @brief "http://api.postivo.pl/webservices.php":SendersReturnObject is a complexType.
///
/// struct ns1__SendersReturnObject operations:
/// - ns1__SendersReturnObject* soap_new_ns1__SendersReturnObject(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__SendersReturnObject(struct soap*, ns1__SendersReturnObject*) default initialize members
/// - int soap_read_ns1__SendersReturnObject(struct soap*, ns1__SendersReturnObject*) deserialize from a source
/// - int soap_write_ns1__SendersReturnObject(struct soap*, ns1__SendersReturnObject*) serialize to a sink
/// - ns1__SendersReturnObject* soap_dup_ns1__SendersReturnObject(struct soap*, ns1__SendersReturnObject* dst, ns1__SendersReturnObject *src) returns deep copy of ns1__SendersReturnObject src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__SendersReturnObject(ns1__SendersReturnObject*) deep deletes ns1__SendersReturnObject data members, use only on dst after soap_dup_ns1__SendersReturnObject(NULL, ns1__SendersReturnObject *dst, ns1__SendersReturnObject *src) (use soapcpp2 -Ed)
struct ns1__SendersReturnObject
{
/// Element "result" of XSD type xs:string.
    char*                                result                         1;	///< Required element.
/// Element "result_code" of XSD type xs:string.
    char*                                result_USCOREcode              1;	///< Required element.
/// Element "result_description" of XSD type xs:string.
    char*                                result_USCOREdescription       1;	///< Required element.
/// Element "senders" of XSD type "http://api.postivo.pl/webservices.php":ArrayOfSenders.
    struct ArrayOfSenders*               senders                        0;	///< Optional element.
};

/// @brief "http://api.postivo.pl/webservices.php":CertificateReturnObject is a complexType.
///
/// struct ns1__CertificateReturnObject operations:
/// - ns1__CertificateReturnObject* soap_new_ns1__CertificateReturnObject(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__CertificateReturnObject(struct soap*, ns1__CertificateReturnObject*) default initialize members
/// - int soap_read_ns1__CertificateReturnObject(struct soap*, ns1__CertificateReturnObject*) deserialize from a source
/// - int soap_write_ns1__CertificateReturnObject(struct soap*, ns1__CertificateReturnObject*) serialize to a sink
/// - ns1__CertificateReturnObject* soap_dup_ns1__CertificateReturnObject(struct soap*, ns1__CertificateReturnObject* dst, ns1__CertificateReturnObject *src) returns deep copy of ns1__CertificateReturnObject src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__CertificateReturnObject(ns1__CertificateReturnObject*) deep deletes ns1__CertificateReturnObject data members, use only on dst after soap_dup_ns1__CertificateReturnObject(NULL, ns1__CertificateReturnObject *dst, ns1__CertificateReturnObject *src) (use soapcpp2 -Ed)
struct ns1__CertificateReturnObject
{
/// Element "result" of XSD type xs:string.
    char*                                result                         1;	///< Required element.
/// Element "result_code" of XSD type xs:string.
    char*                                result_USCOREcode              1;	///< Required element.
/// Element "result_description" of XSD type xs:string.
    char*                                result_USCOREdescription       1;	///< Required element.
/// Element "cert_available" of XSD type xs:boolean.
    enum xsd__boolean                    cert_USCOREavailable           1;	///< Required element.
/// Element "cert_content" of XSD type xs:string.
    char*                                cert_USCOREcontent             0;	///< Optional element.
};

/// @brief "http://api.postivo.pl/webservices.php":PriceReturnObject is a complexType.
///
/// struct ns1__PriceReturnObject operations:
/// - ns1__PriceReturnObject* soap_new_ns1__PriceReturnObject(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__PriceReturnObject(struct soap*, ns1__PriceReturnObject*) default initialize members
/// - int soap_read_ns1__PriceReturnObject(struct soap*, ns1__PriceReturnObject*) deserialize from a source
/// - int soap_write_ns1__PriceReturnObject(struct soap*, ns1__PriceReturnObject*) serialize to a sink
/// - ns1__PriceReturnObject* soap_dup_ns1__PriceReturnObject(struct soap*, ns1__PriceReturnObject* dst, ns1__PriceReturnObject *src) returns deep copy of ns1__PriceReturnObject src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__PriceReturnObject(ns1__PriceReturnObject*) deep deletes ns1__PriceReturnObject data members, use only on dst after soap_dup_ns1__PriceReturnObject(NULL, ns1__PriceReturnObject *dst, ns1__PriceReturnObject *src) (use soapcpp2 -Ed)
struct ns1__PriceReturnObject
{
/// Element "result" of XSD type xs:string.
    char*                                result                         1;	///< Required element.
/// Element "result_code" of XSD type xs:string.
    char*                                result_USCOREcode              1;	///< Required element.
/// Element "result_description" of XSD type xs:string.
    char*                                result_USCOREdescription       1;	///< Required element.
/// Element "shipments_price" of XSD type "http://api.postivo.pl/webservices.php":ArrayOfShipmentsPrice.
    struct ArrayOfShipmentsPrice*        shipments_USCOREprice          1;	///< Required element.
};

/// @brief "http://api.postivo.pl/webservices.php":AddSenderReturnObject is a complexType.
///
/// struct ns1__AddSenderReturnObject operations:
/// - ns1__AddSenderReturnObject* soap_new_ns1__AddSenderReturnObject(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__AddSenderReturnObject(struct soap*, ns1__AddSenderReturnObject*) default initialize members
/// - int soap_read_ns1__AddSenderReturnObject(struct soap*, ns1__AddSenderReturnObject*) deserialize from a source
/// - int soap_write_ns1__AddSenderReturnObject(struct soap*, ns1__AddSenderReturnObject*) serialize to a sink
/// - ns1__AddSenderReturnObject* soap_dup_ns1__AddSenderReturnObject(struct soap*, ns1__AddSenderReturnObject* dst, ns1__AddSenderReturnObject *src) returns deep copy of ns1__AddSenderReturnObject src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__AddSenderReturnObject(ns1__AddSenderReturnObject*) deep deletes ns1__AddSenderReturnObject data members, use only on dst after soap_dup_ns1__AddSenderReturnObject(NULL, ns1__AddSenderReturnObject *dst, ns1__AddSenderReturnObject *src) (use soapcpp2 -Ed)
struct ns1__AddSenderReturnObject
{
/// Element "result" of XSD type xs:string.
    char*                                result                         1;	///< Required element.
/// Element "result_code" of XSD type xs:string.
    char*                                result_USCOREcode              1;	///< Required element.
/// Element "result_description" of XSD type xs:string.
    char*                                result_USCOREdescription       1;	///< Required element.
/// Element "sender_id" of XSD type xs:int.
    int*                                 sender_USCOREid                0;	///< Optional element.
/// Element "shipment_id" of XSD type xs:string.
    char*                                shipment_USCOREid              0;	///< Optional element.
/// Element "sender_name" of XSD type xs:string.
    char*                                sender_USCOREname              0;	///< Optional element.
/// Element "sender_address" of XSD type xs:string.
    char*                                sender_USCOREaddress           0;	///< Optional element.
/// Element "sender_home_number" of XSD type xs:string.
    char*                                sender_USCOREhome_USCOREnumber 0;	///< Optional element.
/// Element "sender_flat_number" of XSD type xs:string.
    char*                                sender_USCOREflat_USCOREnumber 0;	///< Optional element.
/// Element "sender_post_code" of XSD type xs:string.
    char*                                sender_USCOREpost_USCOREcode   0;	///< Optional element.
/// Element "sender_city" of XSD type xs:string.
    char*                                sender_USCOREcity              0;	///< Optional element.
/// Element "sender_country" of XSD type xs:string.
    char*                                sender_USCOREcountry           0;	///< Optional element.
/// Element "sender_fax_number" of XSD type xs:string.
    char*                                sender_USCOREfax_USCOREnumber  0;	///< Optional element.
};

/// @brief "http://api.postivo.pl/webservices.php":VerifySenderReturnObject is a complexType.
///
/// struct ns1__VerifySenderReturnObject operations:
/// - ns1__VerifySenderReturnObject* soap_new_ns1__VerifySenderReturnObject(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__VerifySenderReturnObject(struct soap*, ns1__VerifySenderReturnObject*) default initialize members
/// - int soap_read_ns1__VerifySenderReturnObject(struct soap*, ns1__VerifySenderReturnObject*) deserialize from a source
/// - int soap_write_ns1__VerifySenderReturnObject(struct soap*, ns1__VerifySenderReturnObject*) serialize to a sink
/// - ns1__VerifySenderReturnObject* soap_dup_ns1__VerifySenderReturnObject(struct soap*, ns1__VerifySenderReturnObject* dst, ns1__VerifySenderReturnObject *src) returns deep copy of ns1__VerifySenderReturnObject src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__VerifySenderReturnObject(ns1__VerifySenderReturnObject*) deep deletes ns1__VerifySenderReturnObject data members, use only on dst after soap_dup_ns1__VerifySenderReturnObject(NULL, ns1__VerifySenderReturnObject *dst, ns1__VerifySenderReturnObject *src) (use soapcpp2 -Ed)
struct ns1__VerifySenderReturnObject
{
/// Element "result" of XSD type xs:string.
    char*                                result                         1;	///< Required element.
/// Element "result_code" of XSD type xs:string.
    char*                                result_USCOREcode              1;	///< Required element.
/// Element "result_description" of XSD type xs:string.
    char*                                result_USCOREdescription       1;	///< Required element.
};

/// @brief "http://api.postivo.pl/webservices.php":RemoveSenderReturnObject is a complexType.
///
/// struct ns1__RemoveSenderReturnObject operations:
/// - ns1__RemoveSenderReturnObject* soap_new_ns1__RemoveSenderReturnObject(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ns1__RemoveSenderReturnObject(struct soap*, ns1__RemoveSenderReturnObject*) default initialize members
/// - int soap_read_ns1__RemoveSenderReturnObject(struct soap*, ns1__RemoveSenderReturnObject*) deserialize from a source
/// - int soap_write_ns1__RemoveSenderReturnObject(struct soap*, ns1__RemoveSenderReturnObject*) serialize to a sink
/// - ns1__RemoveSenderReturnObject* soap_dup_ns1__RemoveSenderReturnObject(struct soap*, ns1__RemoveSenderReturnObject* dst, ns1__RemoveSenderReturnObject *src) returns deep copy of ns1__RemoveSenderReturnObject src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ns1__RemoveSenderReturnObject(ns1__RemoveSenderReturnObject*) deep deletes ns1__RemoveSenderReturnObject data members, use only on dst after soap_dup_ns1__RemoveSenderReturnObject(NULL, ns1__RemoveSenderReturnObject *dst, ns1__RemoveSenderReturnObject *src) (use soapcpp2 -Ed)
struct ns1__RemoveSenderReturnObject
{
/// Element "result" of XSD type xs:string.
    char*                                result                         1;	///< Required element.
/// Element "result_code" of XSD type xs:string.
    char*                                result_USCOREcode              1;	///< Required element.
/// Element "result_description" of XSD type xs:string.
    char*                                result_USCOREdescription       1;	///< Required element.
};

/// @brief "http://api.postivo.pl/webservices.php":ArrayOfDocumentFiles is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// struct ArrayOfDocumentFiles operations:
/// - ArrayOfDocumentFiles* soap_new_ArrayOfDocumentFiles(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ArrayOfDocumentFiles(struct soap*, ArrayOfDocumentFiles*) default initialize members
/// - int soap_read_ArrayOfDocumentFiles(struct soap*, ArrayOfDocumentFiles*) deserialize from a source
/// - int soap_write_ArrayOfDocumentFiles(struct soap*, ArrayOfDocumentFiles*) serialize to a sink
/// - ArrayOfDocumentFiles* soap_dup_ArrayOfDocumentFiles(struct soap*, ArrayOfDocumentFiles* dst, ArrayOfDocumentFiles *src) returns deep copy of ArrayOfDocumentFiles src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ArrayOfDocumentFiles(ArrayOfDocumentFiles*) deep deletes ArrayOfDocumentFiles data members, use only on dst after soap_dup_ArrayOfDocumentFiles(NULL, ArrayOfDocumentFiles *dst, ArrayOfDocumentFiles *src) (use soapcpp2 -Ed)
/// SOAP encoded array of "http://api.postivo.pl/webservices.php":DocumentFile.
struct ArrayOfDocumentFiles
{
/// Pointer to dynamic array of struct ns1__DocumentFile*.
    struct ns1__DocumentFile*           *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "http://api.postivo.pl/webservices.php":ArrayOfRecipients is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// struct ArrayOfRecipients operations:
/// - ArrayOfRecipients* soap_new_ArrayOfRecipients(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ArrayOfRecipients(struct soap*, ArrayOfRecipients*) default initialize members
/// - int soap_read_ArrayOfRecipients(struct soap*, ArrayOfRecipients*) deserialize from a source
/// - int soap_write_ArrayOfRecipients(struct soap*, ArrayOfRecipients*) serialize to a sink
/// - ArrayOfRecipients* soap_dup_ArrayOfRecipients(struct soap*, ArrayOfRecipients* dst, ArrayOfRecipients *src) returns deep copy of ArrayOfRecipients src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ArrayOfRecipients(ArrayOfRecipients*) deep deletes ArrayOfRecipients data members, use only on dst after soap_dup_ArrayOfRecipients(NULL, ArrayOfRecipients *dst, ArrayOfRecipients *src) (use soapcpp2 -Ed)
/// SOAP encoded array of "http://api.postivo.pl/webservices.php":Recipient.
struct ArrayOfRecipients
{
/// Pointer to dynamic array of struct ns1__Recipient*.
    struct ns1__Recipient*              *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "http://api.postivo.pl/webservices.php":ArrayOfOptions is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// struct ArrayOfOptions operations:
/// - ArrayOfOptions* soap_new_ArrayOfOptions(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ArrayOfOptions(struct soap*, ArrayOfOptions*) default initialize members
/// - int soap_read_ArrayOfOptions(struct soap*, ArrayOfOptions*) deserialize from a source
/// - int soap_write_ArrayOfOptions(struct soap*, ArrayOfOptions*) serialize to a sink
/// - ArrayOfOptions* soap_dup_ArrayOfOptions(struct soap*, ArrayOfOptions* dst, ArrayOfOptions *src) returns deep copy of ArrayOfOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ArrayOfOptions(ArrayOfOptions*) deep deletes ArrayOfOptions data members, use only on dst after soap_dup_ArrayOfOptions(NULL, ArrayOfOptions *dst, ArrayOfOptions *src) (use soapcpp2 -Ed)
/// SOAP encoded array of "http://api.postivo.pl/webservices.php":Option.
struct ArrayOfOptions
{
/// Pointer to dynamic array of struct ns1__Option*.
    struct ns1__Option*                 *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "http://api.postivo.pl/webservices.php":ArrayOfShipments is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// struct ArrayOfShipments operations:
/// - ArrayOfShipments* soap_new_ArrayOfShipments(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ArrayOfShipments(struct soap*, ArrayOfShipments*) default initialize members
/// - int soap_read_ArrayOfShipments(struct soap*, ArrayOfShipments*) deserialize from a source
/// - int soap_write_ArrayOfShipments(struct soap*, ArrayOfShipments*) serialize to a sink
/// - ArrayOfShipments* soap_dup_ArrayOfShipments(struct soap*, ArrayOfShipments* dst, ArrayOfShipments *src) returns deep copy of ArrayOfShipments src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ArrayOfShipments(ArrayOfShipments*) deep deletes ArrayOfShipments data members, use only on dst after soap_dup_ArrayOfShipments(NULL, ArrayOfShipments *dst, ArrayOfShipments *src) (use soapcpp2 -Ed)
/// SOAP encoded array of "http://api.postivo.pl/webservices.php":Shipment.
struct ArrayOfShipments
{
/// Pointer to dynamic array of struct ns1__Shipment*.
    struct ns1__Shipment*               *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "http://api.postivo.pl/webservices.php":ArrayOfDispatchIds is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// struct ArrayOfDispatchIds operations:
/// - ArrayOfDispatchIds* soap_new_ArrayOfDispatchIds(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ArrayOfDispatchIds(struct soap*, ArrayOfDispatchIds*) default initialize members
/// - int soap_read_ArrayOfDispatchIds(struct soap*, ArrayOfDispatchIds*) deserialize from a source
/// - int soap_write_ArrayOfDispatchIds(struct soap*, ArrayOfDispatchIds*) serialize to a sink
/// - ArrayOfDispatchIds* soap_dup_ArrayOfDispatchIds(struct soap*, ArrayOfDispatchIds* dst, ArrayOfDispatchIds *src) returns deep copy of ArrayOfDispatchIds src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ArrayOfDispatchIds(ArrayOfDispatchIds*) deep deletes ArrayOfDispatchIds data members, use only on dst after soap_dup_ArrayOfDispatchIds(NULL, ArrayOfDispatchIds *dst, ArrayOfDispatchIds *src) (use soapcpp2 -Ed)
/// SOAP encoded array of xs:string.
struct ArrayOfDispatchIds
{
/// Pointer to dynamic array of char*.
    char*                               *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "http://api.postivo.pl/webservices.php":ArrayOfConfigProfiles is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// struct ArrayOfConfigProfiles operations:
/// - ArrayOfConfigProfiles* soap_new_ArrayOfConfigProfiles(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ArrayOfConfigProfiles(struct soap*, ArrayOfConfigProfiles*) default initialize members
/// - int soap_read_ArrayOfConfigProfiles(struct soap*, ArrayOfConfigProfiles*) deserialize from a source
/// - int soap_write_ArrayOfConfigProfiles(struct soap*, ArrayOfConfigProfiles*) serialize to a sink
/// - ArrayOfConfigProfiles* soap_dup_ArrayOfConfigProfiles(struct soap*, ArrayOfConfigProfiles* dst, ArrayOfConfigProfiles *src) returns deep copy of ArrayOfConfigProfiles src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ArrayOfConfigProfiles(ArrayOfConfigProfiles*) deep deletes ArrayOfConfigProfiles data members, use only on dst after soap_dup_ArrayOfConfigProfiles(NULL, ArrayOfConfigProfiles *dst, ArrayOfConfigProfiles *src) (use soapcpp2 -Ed)
/// SOAP encoded array of "http://api.postivo.pl/webservices.php":ConfigProfile.
struct ArrayOfConfigProfiles
{
/// Pointer to dynamic array of struct ns1__ConfigProfile*.
    struct ns1__ConfigProfile*          *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "http://api.postivo.pl/webservices.php":ArrayOfSenders is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// struct ArrayOfSenders operations:
/// - ArrayOfSenders* soap_new_ArrayOfSenders(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ArrayOfSenders(struct soap*, ArrayOfSenders*) default initialize members
/// - int soap_read_ArrayOfSenders(struct soap*, ArrayOfSenders*) deserialize from a source
/// - int soap_write_ArrayOfSenders(struct soap*, ArrayOfSenders*) serialize to a sink
/// - ArrayOfSenders* soap_dup_ArrayOfSenders(struct soap*, ArrayOfSenders* dst, ArrayOfSenders *src) returns deep copy of ArrayOfSenders src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ArrayOfSenders(ArrayOfSenders*) deep deletes ArrayOfSenders data members, use only on dst after soap_dup_ArrayOfSenders(NULL, ArrayOfSenders *dst, ArrayOfSenders *src) (use soapcpp2 -Ed)
/// SOAP encoded array of "http://api.postivo.pl/webservices.php":Sender.
struct ArrayOfSenders
{
/// Pointer to dynamic array of struct ns1__Sender*.
    struct ns1__Sender*                 *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "http://api.postivo.pl/webservices.php":ArrayOfShipmentsPrice is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// struct ArrayOfShipmentsPrice operations:
/// - ArrayOfShipmentsPrice* soap_new_ArrayOfShipmentsPrice(struct soap*, int num) allocate and default initialize one or more values (array)
/// - soap_default_ArrayOfShipmentsPrice(struct soap*, ArrayOfShipmentsPrice*) default initialize members
/// - int soap_read_ArrayOfShipmentsPrice(struct soap*, ArrayOfShipmentsPrice*) deserialize from a source
/// - int soap_write_ArrayOfShipmentsPrice(struct soap*, ArrayOfShipmentsPrice*) serialize to a sink
/// - ArrayOfShipmentsPrice* soap_dup_ArrayOfShipmentsPrice(struct soap*, ArrayOfShipmentsPrice* dst, ArrayOfShipmentsPrice *src) returns deep copy of ArrayOfShipmentsPrice src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_ArrayOfShipmentsPrice(ArrayOfShipmentsPrice*) deep deletes ArrayOfShipmentsPrice data members, use only on dst after soap_dup_ArrayOfShipmentsPrice(NULL, ArrayOfShipmentsPrice *dst, ArrayOfShipmentsPrice *src) (use soapcpp2 -Ed)
/// SOAP encoded array of "http://api.postivo.pl/webservices.php":ShipmentPrice.
struct ArrayOfShipmentsPrice
{
/// Pointer to dynamic array of struct ns1__ShipmentPrice*.
    struct ns1__ShipmentPrice*          *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://api.postivo.pl/webservices.php                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://api.postivo.pl/webservices.php                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns2  service name:	Postivo_x002eplBinding 
//gsoap ns2  service type:	Postivo_x002eplPortType 
//gsoap ns2  service port:	https://api.postivo.pl:443/webservices.php 
//gsoap ns2  service namespace:	http://api.postivo.pl 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref Postivo_x002eplBinding

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page Postivo_x002eplBinding Binding "Postivo_x002eplBinding"

@section Postivo_x002eplBinding_operations Operations of Binding "Postivo_x002eplBinding"

  - @ref ns2__dispatch

  - @ref ns2__getDispatchStatus

  - @ref ns2__getBalance

  - @ref ns2__getConfigProfiles

  - @ref ns2__getSenders

  - @ref ns2__getCertificate

  - @ref ns2__getPrice

  - @ref ns2__addSender

  - @ref ns2__verifySender

  - @ref ns2__removeSender

@section Postivo_x002eplBinding_ports Default endpoints of Binding "Postivo_x002eplBinding"

  - https://api.postivo.pl:443/webservices.php

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   Postivo_x002eplBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__dispatch                                                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__dispatchResponse" of operation "ns2__dispatch".
struct ns2__dispatchResponse
{
    struct ns1__DispatchReturnObject*   :return_;	///< Output parameter, : unqualified name as per RPC encoding
};

/** Operation "ns2__dispatch" of service binding "Postivo_x002eplBinding".
Przekazuje now przesyk do realizacji

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - https://api.postivo.pl:443/webservices.php

  - Default SOAP action or REST location path:
    - "http://api.postivo.pl#dispatch"

  - Addressing input action: "http://api.postivo.pl#dispatch"

  - Addressing output action: "http://api.postivo.pl#dispatchResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__dispatch(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    char*                               msg_USCOREtype,
    struct ArrayOfDocumentFiles*        document_USCOREfiles,
    struct ArrayOfRecipients*           recipients,
    struct ArrayOfOptions*              options,
    // output parameters:
    struct ns2__dispatchResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__dispatch(
    struct soap *soap,
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    char*                               msg_USCOREtype,
    struct ArrayOfDocumentFiles*        document_USCOREfiles,
    struct ArrayOfRecipients*           recipients,
    struct ArrayOfOptions*              options,
    // output parameters:
    struct ns2__dispatchResponse*
  );
@endcode

*/

//gsoap ns2  service method-protocol:	dispatch SOAP
//gsoap ns2  service method-style:	dispatch rpc
//gsoap ns2  service method-encoding:	dispatch http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-input-action:	dispatch http://api.postivo.pl#dispatch
//gsoap ns2  service method-output-action:	dispatch http://api.postivo.pl#dispatchResponse
int ns2__dispatch(
    char*                               :login,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :api_USCOREpass,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :msg_USCOREtype,	///< Input parameter, : unqualified name as per RPC encoding
    struct ArrayOfDocumentFiles*        :document_USCOREfiles,	///< Input parameter, : unqualified name as per RPC encoding
    struct ArrayOfRecipients*           :recipients,	///< Input parameter, : unqualified name as per RPC encoding
    struct ArrayOfOptions*              :options,	///< Input parameter, : unqualified name as per RPC encoding
    struct ns2__dispatchResponse       *	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__getDispatchStatus                                                   *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__getDispatchStatusResponse" of operation "ns2__getDispatchStatus".
struct ns2__getDispatchStatusResponse
{
    struct ns1__DispatchReturnObject*   :return_;	///< Output parameter, : unqualified name as per RPC encoding
};

/** Operation "ns2__getDispatchStatus" of service binding "Postivo_x002eplBinding".
Przekazuje statusy przesyek o podanych ID

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - https://api.postivo.pl:443/webservices.php

  - Default SOAP action or REST location path:
    - "http://api.postivo.pl#getDispatchStatus"

  - Addressing input action: "http://api.postivo.pl#getDispatchStatus"

  - Addressing output action: "http://api.postivo.pl#getDispatchStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__getDispatchStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    struct ArrayOfDispatchIds*          dispatch_USCOREids,
    // output parameters:
    struct ns2__getDispatchStatusResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__getDispatchStatus(
    struct soap *soap,
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    struct ArrayOfDispatchIds*          dispatch_USCOREids,
    // output parameters:
    struct ns2__getDispatchStatusResponse*
  );
@endcode

*/

//gsoap ns2  service method-protocol:	getDispatchStatus SOAP
//gsoap ns2  service method-style:	getDispatchStatus rpc
//gsoap ns2  service method-encoding:	getDispatchStatus http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-input-action:	getDispatchStatus http://api.postivo.pl#getDispatchStatus
//gsoap ns2  service method-output-action:	getDispatchStatus http://api.postivo.pl#getDispatchStatusResponse
int ns2__getDispatchStatus(
    char*                               :login,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :api_USCOREpass,	///< Input parameter, : unqualified name as per RPC encoding
    struct ArrayOfDispatchIds*          :dispatch_USCOREids,	///< Input parameter, : unqualified name as per RPC encoding
    struct ns2__getDispatchStatusResponse*	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__getBalance                                                          *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__getBalanceResponse" of operation "ns2__getBalance".
struct ns2__getBalanceResponse
{
    struct ns1__BalanceReturnObject*    :return_;	///< Output parameter, : unqualified name as per RPC encoding
};

/** Operation "ns2__getBalance" of service binding "Postivo_x002eplBinding".
Zwraca stan konta i informacje finansowe

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - https://api.postivo.pl:443/webservices.php

  - Default SOAP action or REST location path:
    - "http://api.postivo.pl#getBalance"

  - Addressing input action: "http://api.postivo.pl#getBalance"

  - Addressing output action: "http://api.postivo.pl#getBalanceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__getBalance(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    // output parameters:
    struct ns2__getBalanceResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__getBalance(
    struct soap *soap,
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    // output parameters:
    struct ns2__getBalanceResponse*
  );
@endcode

*/

//gsoap ns2  service method-protocol:	getBalance SOAP
//gsoap ns2  service method-style:	getBalance rpc
//gsoap ns2  service method-encoding:	getBalance http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-input-action:	getBalance http://api.postivo.pl#getBalance
//gsoap ns2  service method-output-action:	getBalance http://api.postivo.pl#getBalanceResponse
int ns2__getBalance(
    char*                               :login,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :api_USCOREpass,	///< Input parameter, : unqualified name as per RPC encoding
    struct ns2__getBalanceResponse     *	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__getConfigProfiles                                                   *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__getConfigProfilesResponse" of operation "ns2__getConfigProfiles".
struct ns2__getConfigProfilesResponse
{
    struct ns1__ConfigProfilesReturnObject* :return_;	///< Output parameter, : unqualified name as per RPC encoding
};

/** Operation "ns2__getConfigProfiles" of service binding "Postivo_x002eplBinding".
Zwraca wszystkie profile konfiguracji zapisane na koncie Uytkownika

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - https://api.postivo.pl:443/webservices.php

  - Default SOAP action or REST location path:
    - "http://api.postivo.pl#getConfigProfiles"

  - Addressing input action: "http://api.postivo.pl#getConfigProfiles"

  - Addressing output action: "http://api.postivo.pl#getConfigProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__getConfigProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    char*                               msg_USCOREtype,
    // output parameters:
    struct ns2__getConfigProfilesResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__getConfigProfiles(
    struct soap *soap,
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    char*                               msg_USCOREtype,
    // output parameters:
    struct ns2__getConfigProfilesResponse*
  );
@endcode

*/

//gsoap ns2  service method-protocol:	getConfigProfiles SOAP
//gsoap ns2  service method-style:	getConfigProfiles rpc
//gsoap ns2  service method-encoding:	getConfigProfiles http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-input-action:	getConfigProfiles http://api.postivo.pl#getConfigProfiles
//gsoap ns2  service method-output-action:	getConfigProfiles http://api.postivo.pl#getConfigProfilesResponse
int ns2__getConfigProfiles(
    char*                               :login,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :api_USCOREpass,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :msg_USCOREtype,	///< Input parameter, : unqualified name as per RPC encoding
    struct ns2__getConfigProfilesResponse*	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__getSenders                                                          *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__getSendersResponse" of operation "ns2__getSenders".
struct ns2__getSendersResponse
{
    struct ns1__SendersReturnObject*    :return_;	///< Output parameter, : unqualified name as per RPC encoding
};

/** Operation "ns2__getSenders" of service binding "Postivo_x002eplBinding".
Zwraca wszystkich nadawcw skonfigurowanych na koncie Uytkownika

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - https://api.postivo.pl:443/webservices.php

  - Default SOAP action or REST location path:
    - "http://api.postivo.pl#getSenders"

  - Addressing input action: "http://api.postivo.pl#getSenders"

  - Addressing output action: "http://api.postivo.pl#getSendersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__getSenders(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    // output parameters:
    struct ns2__getSendersResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__getSenders(
    struct soap *soap,
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    // output parameters:
    struct ns2__getSendersResponse*
  );
@endcode

*/

//gsoap ns2  service method-protocol:	getSenders SOAP
//gsoap ns2  service method-style:	getSenders rpc
//gsoap ns2  service method-encoding:	getSenders http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-input-action:	getSenders http://api.postivo.pl#getSenders
//gsoap ns2  service method-output-action:	getSenders http://api.postivo.pl#getSendersResponse
int ns2__getSenders(
    char*                               :login,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :api_USCOREpass,	///< Input parameter, : unqualified name as per RPC encoding
    struct ns2__getSendersResponse     *	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__getCertificate                                                      *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__getCertificateResponse" of operation "ns2__getCertificate".
struct ns2__getCertificateResponse
{
    struct ns1__CertificateReturnObject* :return_;	///< Output parameter, : unqualified name as per RPC encoding
};

/** Operation "ns2__getCertificate" of service binding "Postivo_x002eplBinding".
Generuje potwierdzenia nadania i odbioru przesyek

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - https://api.postivo.pl:443/webservices.php

  - Default SOAP action or REST location path:
    - "http://api.postivo.pl#getCertificate"

  - Addressing input action: "http://api.postivo.pl#getCertificate"

  - Addressing output action: "http://api.postivo.pl#getCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__getCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    char*                               dispatch_USCOREid,
    int                                 certificate_USCOREtype,
    // output parameters:
    struct ns2__getCertificateResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__getCertificate(
    struct soap *soap,
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    char*                               dispatch_USCOREid,
    int                                 certificate_USCOREtype,
    // output parameters:
    struct ns2__getCertificateResponse*
  );
@endcode

*/

//gsoap ns2  service method-protocol:	getCertificate SOAP
//gsoap ns2  service method-style:	getCertificate rpc
//gsoap ns2  service method-encoding:	getCertificate http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-input-action:	getCertificate http://api.postivo.pl#getCertificate
//gsoap ns2  service method-output-action:	getCertificate http://api.postivo.pl#getCertificateResponse
int ns2__getCertificate(
    char*                               :login,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :api_USCOREpass,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :dispatch_USCOREid,	///< Input parameter, : unqualified name as per RPC encoding
    int                                 :certificate_USCOREtype,	///< Input parameter, : unqualified name as per RPC encoding
    struct ns2__getCertificateResponse *	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__getPrice                                                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__getPriceResponse" of operation "ns2__getPrice".
struct ns2__getPriceResponse
{
    struct ns1__PriceReturnObject*      :return_;	///< Output parameter, : unqualified name as per RPC encoding
};

/** Operation "ns2__getPrice" of service binding "Postivo_x002eplBinding".
Oblicza cakowity koszt wysania przesyki

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - https://api.postivo.pl:443/webservices.php

  - Default SOAP action or REST location path:
    - "http://api.postivo.pl#getPrice"

  - Addressing input action: "http://api.postivo.pl#getPrice"

  - Addressing output action: "http://api.postivo.pl#getPriceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__getPrice(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    char*                               msg_USCOREtype,
    struct ArrayOfDocumentFiles*        document_USCOREfiles,
    struct ArrayOfRecipients*           recipients,
    int                                 config_USCOREid,
    // output parameters:
    struct ns2__getPriceResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__getPrice(
    struct soap *soap,
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    char*                               msg_USCOREtype,
    struct ArrayOfDocumentFiles*        document_USCOREfiles,
    struct ArrayOfRecipients*           recipients,
    int                                 config_USCOREid,
    // output parameters:
    struct ns2__getPriceResponse*
  );
@endcode

*/

//gsoap ns2  service method-protocol:	getPrice SOAP
//gsoap ns2  service method-style:	getPrice rpc
//gsoap ns2  service method-encoding:	getPrice http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-input-action:	getPrice http://api.postivo.pl#getPrice
//gsoap ns2  service method-output-action:	getPrice http://api.postivo.pl#getPriceResponse
int ns2__getPrice(
    char*                               :login,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :api_USCOREpass,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :msg_USCOREtype,	///< Input parameter, : unqualified name as per RPC encoding
    struct ArrayOfDocumentFiles*        :document_USCOREfiles,	///< Input parameter, : unqualified name as per RPC encoding
    struct ArrayOfRecipients*           :recipients,	///< Input parameter, : unqualified name as per RPC encoding
    int                                 :config_USCOREid,	///< Input parameter, : unqualified name as per RPC encoding
    struct ns2__getPriceResponse       *	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__addSender                                                           *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__addSenderResponse" of operation "ns2__addSender".
struct ns2__addSenderResponse
{
    struct ns1__AddSenderReturnObject*  :return_;	///< Output parameter, : unqualified name as per RPC encoding
};

/** Operation "ns2__addSender" of service binding "Postivo_x002eplBinding".
Dodaje nowego nadawc do listy i wysya list z kodem weryfikacyjnym

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - https://api.postivo.pl:443/webservices.php

  - Default SOAP action or REST location path:
    - "http://api.postivo.pl#addSender"

  - Addressing input action: "http://api.postivo.pl#addSender"

  - Addressing output action: "http://api.postivo.pl#addSenderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__addSender(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    struct ns1__SenderData*             sender_USCOREdata,
    enum xsd__boolean                   accept_USCOREterms,
    // output parameters:
    struct ns2__addSenderResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__addSender(
    struct soap *soap,
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    struct ns1__SenderData*             sender_USCOREdata,
    enum xsd__boolean                   accept_USCOREterms,
    // output parameters:
    struct ns2__addSenderResponse*
  );
@endcode

*/

//gsoap ns2  service method-protocol:	addSender SOAP
//gsoap ns2  service method-style:	addSender rpc
//gsoap ns2  service method-encoding:	addSender http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-input-action:	addSender http://api.postivo.pl#addSender
//gsoap ns2  service method-output-action:	addSender http://api.postivo.pl#addSenderResponse
int ns2__addSender(
    char*                               :login,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :api_USCOREpass,	///< Input parameter, : unqualified name as per RPC encoding
    struct ns1__SenderData*             :sender_USCOREdata,	///< Input parameter, : unqualified name as per RPC encoding
    enum xsd__boolean                   :accept_USCOREterms,	///< Input parameter, : unqualified name as per RPC encoding
    struct ns2__addSenderResponse      *	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__verifySender                                                        *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__verifySenderResponse" of operation "ns2__verifySender".
struct ns2__verifySenderResponse
{
    struct ns1__VerifySenderReturnObject* :return_;	///< Output parameter, : unqualified name as per RPC encoding
};

/** Operation "ns2__verifySender" of service binding "Postivo_x002eplBinding".
Przekazuje kod weryfikacyjny w celu weryfikacji danych nadawcy

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - https://api.postivo.pl:443/webservices.php

  - Default SOAP action or REST location path:
    - "http://api.postivo.pl#verifySender"

  - Addressing input action: "http://api.postivo.pl#verifySender"

  - Addressing output action: "http://api.postivo.pl#verifySenderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__verifySender(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    int                                 sender_USCOREid,
    char*                               verification_USCOREcode,
    // output parameters:
    struct ns2__verifySenderResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__verifySender(
    struct soap *soap,
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    int                                 sender_USCOREid,
    char*                               verification_USCOREcode,
    // output parameters:
    struct ns2__verifySenderResponse*
  );
@endcode

*/

//gsoap ns2  service method-protocol:	verifySender SOAP
//gsoap ns2  service method-style:	verifySender rpc
//gsoap ns2  service method-encoding:	verifySender http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-input-action:	verifySender http://api.postivo.pl#verifySender
//gsoap ns2  service method-output-action:	verifySender http://api.postivo.pl#verifySenderResponse
int ns2__verifySender(
    char*                               :login,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :api_USCOREpass,	///< Input parameter, : unqualified name as per RPC encoding
    int                                 :sender_USCOREid,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :verification_USCOREcode,	///< Input parameter, : unqualified name as per RPC encoding
    struct ns2__verifySenderResponse   *	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns2__removeSender                                                        *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__removeSenderResponse" of operation "ns2__removeSender".
struct ns2__removeSenderResponse
{
    struct ns1__RemoveSenderReturnObject* :return_;	///< Output parameter, : unqualified name as per RPC encoding
};

/** Operation "ns2__removeSender" of service binding "Postivo_x002eplBinding".
Usuwa nadawce z listy nadawcow

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - https://api.postivo.pl:443/webservices.php

  - Default SOAP action or REST location path:
    - "http://api.postivo.pl#removeSender"

  - Addressing input action: "http://api.postivo.pl#removeSender"

  - Addressing output action: "http://api.postivo.pl#removeSenderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__removeSender(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    int                                 sender_USCOREid,
    // output parameters:
    struct ns2__removeSenderResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__removeSender(
    struct soap *soap,
    // input parameters:
    char*                               login,
    char*                               api_USCOREpass,
    int                                 sender_USCOREid,
    // output parameters:
    struct ns2__removeSenderResponse*
  );
@endcode

*/

//gsoap ns2  service method-protocol:	removeSender SOAP
//gsoap ns2  service method-style:	removeSender rpc
//gsoap ns2  service method-encoding:	removeSender http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-input-action:	removeSender http://api.postivo.pl#removeSender
//gsoap ns2  service method-output-action:	removeSender http://api.postivo.pl#removeSenderResponse
int ns2__removeSender(
    char*                               :login,	///< Input parameter, : unqualified name as per RPC encoding
    char*                               :api_USCOREpass,	///< Input parameter, : unqualified name as per RPC encoding
    int                                 :sender_USCOREid,	///< Input parameter, : unqualified name as per RPC encoding
    struct ns2__removeSenderResponse   *	///< Output response struct parameter
);

/**

@page Postivo_x002eplBinding Binding "Postivo_x002eplBinding"

@section Postivo_x002eplBinding_policy_enablers Policy Enablers of Binding "Postivo_x002eplBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "http://api.postivo.pl/webservices.php"

*/

/* End of postivoService.h */
