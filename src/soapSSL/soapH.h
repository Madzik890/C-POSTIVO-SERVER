/* soapH.h
   Generated by gSOAP 2.8.70 for postivoService.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void * SOAP_FMAC4 soap_dupelement(struct soap*, const void*, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_delelement(const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

#ifdef SOAP_DEFAULT_byte
#define soap_default_byte(soap, a) (*(a) = SOAP_DEFAULT_byte)
#else
#define soap_default_byte(soap, a) (*(a) = (char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_byte
#define soap_PUT_byte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_byte
#define soap_POST_send_byte(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_byte
#define soap_GET_byte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_byte(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_byte
#define soap_POST_recv_byte(soap, data) ( soap_read_byte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

#ifdef SOAP_DEFAULT_int
#define soap_default_int(soap, a) (*(a) = SOAP_DEFAULT_int)
#else
#define soap_default_int(soap, a) (*(a) = (int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_int
#define soap_PUT_int(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_int
#define soap_POST_send_int(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_int
#define soap_GET_int(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_int(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_int
#define soap_POST_recv_int(soap, data) ( soap_read_int(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_float_DEFINED
#define SOAP_TYPE_float_DEFINED

#ifdef SOAP_DEFAULT_float
#define soap_default_float(soap, a) (*(a) = SOAP_DEFAULT_float)
#else
#define soap_default_float(soap, a) (*(a) = (float)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);

SOAP_FMAC3 float * SOAP_FMAC4 soap_new_float(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);

#ifndef soap_write_float
#define soap_write_float(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_float(soap, data, "float", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_float
#define soap_PUT_float(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_float(soap, data, "float", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_float
#define soap_POST_send_float(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_float(soap, data, "float", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);

#ifndef soap_read_float
#define soap_read_float(soap, data) ( soap_begin_recv(soap) || !soap_get_float(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_float
#define soap_GET_float(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_float(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_float
#define soap_POST_recv_float(soap, data) ( soap_read_float(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__boolean_DEFINED
#define SOAP_TYPE_xsd__boolean_DEFINED

#ifdef SOAP_DEFAULT_xsd__boolean
#define soap_default_xsd__boolean(soap, a) (*(a) = SOAP_DEFAULT_xsd__boolean)
#else
#define soap_default_xsd__boolean(soap, a) (*(a) = (enum xsd__boolean)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const enum xsd__boolean *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__boolean2s(struct soap*, enum xsd__boolean);
SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, enum xsd__boolean *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__boolean(struct soap*, const char*, enum xsd__boolean *);

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_new_xsd__boolean(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, const enum xsd__boolean *, const char*, const char*);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__boolean
#define soap_PUT_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__boolean
#define soap_POST_send_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, enum xsd__boolean *, const char*, const char*);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__boolean
#define soap_GET_xsd__boolean(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__boolean(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__boolean
#define soap_POST_recv_xsd__boolean(soap, data) ( soap_read_xsd__boolean(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_new_SOAP_ENV__Fault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Fault
#define soap_PUT_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Fault
#define soap_POST_send_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Fault
#define soap_GET_SOAP_ENV__Fault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Fault(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Fault
#define soap_POST_recv_SOAP_ENV__Fault(soap, data) ( soap_read_SOAP_ENV__Fault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_new_SOAP_ENV__Reason(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Reason
#define soap_PUT_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Reason
#define soap_POST_send_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Reason
#define soap_GET_SOAP_ENV__Reason(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Reason(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Reason
#define soap_POST_recv_SOAP_ENV__Reason(soap, data) ( soap_read_SOAP_ENV__Reason(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_new_SOAP_ENV__Detail(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Detail
#define soap_PUT_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Detail
#define soap_POST_send_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Detail
#define soap_GET_SOAP_ENV__Detail(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Detail(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Detail
#define soap_POST_recv_SOAP_ENV__Detail(soap, data) ( soap_read_SOAP_ENV__Detail(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_new_SOAP_ENV__Code(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Code
#define soap_PUT_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Code
#define soap_POST_send_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Code
#define soap_GET_SOAP_ENV__Code(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Code(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Code
#define soap_POST_recv_SOAP_ENV__Code(soap, data) ( soap_read_SOAP_ENV__Code(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_new_SOAP_ENV__Header(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Header
#define soap_PUT_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Header
#define soap_POST_send_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Header
#define soap_GET_SOAP_ENV__Header(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Header(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Header
#define soap_POST_recv_SOAP_ENV__Header(soap, data) ( soap_read_SOAP_ENV__Header(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE_ns2__removeSender_DEFINED
#define SOAP_TYPE_ns2__removeSender_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__removeSender(struct soap*, struct ns2__removeSender *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__removeSender(struct soap*, const struct ns2__removeSender *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__removeSender(struct soap*, const char*, int, const struct ns2__removeSender *, const char*);
SOAP_FMAC3 struct ns2__removeSender * SOAP_FMAC4 soap_in_ns2__removeSender(struct soap*, const char*, struct ns2__removeSender *, const char*);

SOAP_FMAC3 struct ns2__removeSender * SOAP_FMAC4 soap_new_ns2__removeSender(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__removeSender(struct soap*, const struct ns2__removeSender *, const char*, const char*);

#ifndef soap_write_ns2__removeSender
#define soap_write_ns2__removeSender(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__removeSender(soap, data), 0) || soap_put_ns2__removeSender(soap, data, "ns2:removeSender", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__removeSender
#define soap_PUT_ns2__removeSender(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__removeSender(soap, data), 0) || soap_put_ns2__removeSender(soap, data, "ns2:removeSender", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__removeSender
#define soap_POST_send_ns2__removeSender(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__removeSender(soap, data), 0) || soap_put_ns2__removeSender(soap, data, "ns2:removeSender", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__removeSender * SOAP_FMAC4 soap_get_ns2__removeSender(struct soap*, struct ns2__removeSender *, const char*, const char*);

#ifndef soap_read_ns2__removeSender
#define soap_read_ns2__removeSender(soap, data) ( ((data) ? (soap_default_ns2__removeSender(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__removeSender(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__removeSender
#define soap_GET_ns2__removeSender(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__removeSender(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__removeSender
#define soap_POST_recv_ns2__removeSender(soap, data) ( soap_read_ns2__removeSender(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__removeSenderResponse_DEFINED
#define SOAP_TYPE_ns2__removeSenderResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__removeSenderResponse(struct soap*, struct ns2__removeSenderResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__removeSenderResponse(struct soap*, const struct ns2__removeSenderResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__removeSenderResponse(struct soap*, const char*, int, const struct ns2__removeSenderResponse *, const char*);
SOAP_FMAC3 struct ns2__removeSenderResponse * SOAP_FMAC4 soap_in_ns2__removeSenderResponse(struct soap*, const char*, struct ns2__removeSenderResponse *, const char*);

SOAP_FMAC3 struct ns2__removeSenderResponse * SOAP_FMAC4 soap_new_ns2__removeSenderResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__removeSenderResponse(struct soap*, const struct ns2__removeSenderResponse *, const char*, const char*);

#ifndef soap_write_ns2__removeSenderResponse
#define soap_write_ns2__removeSenderResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__removeSenderResponse(soap, data), 0) || soap_put_ns2__removeSenderResponse(soap, data, "ns2:removeSenderResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__removeSenderResponse
#define soap_PUT_ns2__removeSenderResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__removeSenderResponse(soap, data), 0) || soap_put_ns2__removeSenderResponse(soap, data, "ns2:removeSenderResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__removeSenderResponse
#define soap_POST_send_ns2__removeSenderResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__removeSenderResponse(soap, data), 0) || soap_put_ns2__removeSenderResponse(soap, data, "ns2:removeSenderResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__removeSenderResponse * SOAP_FMAC4 soap_get_ns2__removeSenderResponse(struct soap*, struct ns2__removeSenderResponse *, const char*, const char*);

#ifndef soap_read_ns2__removeSenderResponse
#define soap_read_ns2__removeSenderResponse(soap, data) ( ((data) ? (soap_default_ns2__removeSenderResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__removeSenderResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__removeSenderResponse
#define soap_GET_ns2__removeSenderResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__removeSenderResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__removeSenderResponse
#define soap_POST_recv_ns2__removeSenderResponse(soap, data) ( soap_read_ns2__removeSenderResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__verifySender_DEFINED
#define SOAP_TYPE_ns2__verifySender_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__verifySender(struct soap*, struct ns2__verifySender *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__verifySender(struct soap*, const struct ns2__verifySender *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__verifySender(struct soap*, const char*, int, const struct ns2__verifySender *, const char*);
SOAP_FMAC3 struct ns2__verifySender * SOAP_FMAC4 soap_in_ns2__verifySender(struct soap*, const char*, struct ns2__verifySender *, const char*);

SOAP_FMAC3 struct ns2__verifySender * SOAP_FMAC4 soap_new_ns2__verifySender(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__verifySender(struct soap*, const struct ns2__verifySender *, const char*, const char*);

#ifndef soap_write_ns2__verifySender
#define soap_write_ns2__verifySender(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__verifySender(soap, data), 0) || soap_put_ns2__verifySender(soap, data, "ns2:verifySender", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__verifySender
#define soap_PUT_ns2__verifySender(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__verifySender(soap, data), 0) || soap_put_ns2__verifySender(soap, data, "ns2:verifySender", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__verifySender
#define soap_POST_send_ns2__verifySender(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__verifySender(soap, data), 0) || soap_put_ns2__verifySender(soap, data, "ns2:verifySender", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__verifySender * SOAP_FMAC4 soap_get_ns2__verifySender(struct soap*, struct ns2__verifySender *, const char*, const char*);

#ifndef soap_read_ns2__verifySender
#define soap_read_ns2__verifySender(soap, data) ( ((data) ? (soap_default_ns2__verifySender(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__verifySender(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__verifySender
#define soap_GET_ns2__verifySender(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__verifySender(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__verifySender
#define soap_POST_recv_ns2__verifySender(soap, data) ( soap_read_ns2__verifySender(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__verifySenderResponse_DEFINED
#define SOAP_TYPE_ns2__verifySenderResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__verifySenderResponse(struct soap*, struct ns2__verifySenderResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__verifySenderResponse(struct soap*, const struct ns2__verifySenderResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__verifySenderResponse(struct soap*, const char*, int, const struct ns2__verifySenderResponse *, const char*);
SOAP_FMAC3 struct ns2__verifySenderResponse * SOAP_FMAC4 soap_in_ns2__verifySenderResponse(struct soap*, const char*, struct ns2__verifySenderResponse *, const char*);

SOAP_FMAC3 struct ns2__verifySenderResponse * SOAP_FMAC4 soap_new_ns2__verifySenderResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__verifySenderResponse(struct soap*, const struct ns2__verifySenderResponse *, const char*, const char*);

#ifndef soap_write_ns2__verifySenderResponse
#define soap_write_ns2__verifySenderResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__verifySenderResponse(soap, data), 0) || soap_put_ns2__verifySenderResponse(soap, data, "ns2:verifySenderResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__verifySenderResponse
#define soap_PUT_ns2__verifySenderResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__verifySenderResponse(soap, data), 0) || soap_put_ns2__verifySenderResponse(soap, data, "ns2:verifySenderResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__verifySenderResponse
#define soap_POST_send_ns2__verifySenderResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__verifySenderResponse(soap, data), 0) || soap_put_ns2__verifySenderResponse(soap, data, "ns2:verifySenderResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__verifySenderResponse * SOAP_FMAC4 soap_get_ns2__verifySenderResponse(struct soap*, struct ns2__verifySenderResponse *, const char*, const char*);

#ifndef soap_read_ns2__verifySenderResponse
#define soap_read_ns2__verifySenderResponse(soap, data) ( ((data) ? (soap_default_ns2__verifySenderResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__verifySenderResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__verifySenderResponse
#define soap_GET_ns2__verifySenderResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__verifySenderResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__verifySenderResponse
#define soap_POST_recv_ns2__verifySenderResponse(soap, data) ( soap_read_ns2__verifySenderResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__addSender_DEFINED
#define SOAP_TYPE_ns2__addSender_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__addSender(struct soap*, struct ns2__addSender *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__addSender(struct soap*, const struct ns2__addSender *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__addSender(struct soap*, const char*, int, const struct ns2__addSender *, const char*);
SOAP_FMAC3 struct ns2__addSender * SOAP_FMAC4 soap_in_ns2__addSender(struct soap*, const char*, struct ns2__addSender *, const char*);

SOAP_FMAC3 struct ns2__addSender * SOAP_FMAC4 soap_new_ns2__addSender(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__addSender(struct soap*, const struct ns2__addSender *, const char*, const char*);

#ifndef soap_write_ns2__addSender
#define soap_write_ns2__addSender(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__addSender(soap, data), 0) || soap_put_ns2__addSender(soap, data, "ns2:addSender", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__addSender
#define soap_PUT_ns2__addSender(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__addSender(soap, data), 0) || soap_put_ns2__addSender(soap, data, "ns2:addSender", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__addSender
#define soap_POST_send_ns2__addSender(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__addSender(soap, data), 0) || soap_put_ns2__addSender(soap, data, "ns2:addSender", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__addSender * SOAP_FMAC4 soap_get_ns2__addSender(struct soap*, struct ns2__addSender *, const char*, const char*);

#ifndef soap_read_ns2__addSender
#define soap_read_ns2__addSender(soap, data) ( ((data) ? (soap_default_ns2__addSender(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__addSender(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__addSender
#define soap_GET_ns2__addSender(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__addSender(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__addSender
#define soap_POST_recv_ns2__addSender(soap, data) ( soap_read_ns2__addSender(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__addSenderResponse_DEFINED
#define SOAP_TYPE_ns2__addSenderResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__addSenderResponse(struct soap*, struct ns2__addSenderResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__addSenderResponse(struct soap*, const struct ns2__addSenderResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__addSenderResponse(struct soap*, const char*, int, const struct ns2__addSenderResponse *, const char*);
SOAP_FMAC3 struct ns2__addSenderResponse * SOAP_FMAC4 soap_in_ns2__addSenderResponse(struct soap*, const char*, struct ns2__addSenderResponse *, const char*);

SOAP_FMAC3 struct ns2__addSenderResponse * SOAP_FMAC4 soap_new_ns2__addSenderResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__addSenderResponse(struct soap*, const struct ns2__addSenderResponse *, const char*, const char*);

#ifndef soap_write_ns2__addSenderResponse
#define soap_write_ns2__addSenderResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__addSenderResponse(soap, data), 0) || soap_put_ns2__addSenderResponse(soap, data, "ns2:addSenderResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__addSenderResponse
#define soap_PUT_ns2__addSenderResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__addSenderResponse(soap, data), 0) || soap_put_ns2__addSenderResponse(soap, data, "ns2:addSenderResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__addSenderResponse
#define soap_POST_send_ns2__addSenderResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__addSenderResponse(soap, data), 0) || soap_put_ns2__addSenderResponse(soap, data, "ns2:addSenderResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__addSenderResponse * SOAP_FMAC4 soap_get_ns2__addSenderResponse(struct soap*, struct ns2__addSenderResponse *, const char*, const char*);

#ifndef soap_read_ns2__addSenderResponse
#define soap_read_ns2__addSenderResponse(soap, data) ( ((data) ? (soap_default_ns2__addSenderResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__addSenderResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__addSenderResponse
#define soap_GET_ns2__addSenderResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__addSenderResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__addSenderResponse
#define soap_POST_recv_ns2__addSenderResponse(soap, data) ( soap_read_ns2__addSenderResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getPrice_DEFINED
#define SOAP_TYPE_ns2__getPrice_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getPrice(struct soap*, struct ns2__getPrice *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getPrice(struct soap*, const struct ns2__getPrice *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getPrice(struct soap*, const char*, int, const struct ns2__getPrice *, const char*);
SOAP_FMAC3 struct ns2__getPrice * SOAP_FMAC4 soap_in_ns2__getPrice(struct soap*, const char*, struct ns2__getPrice *, const char*);

SOAP_FMAC3 struct ns2__getPrice * SOAP_FMAC4 soap_new_ns2__getPrice(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getPrice(struct soap*, const struct ns2__getPrice *, const char*, const char*);

#ifndef soap_write_ns2__getPrice
#define soap_write_ns2__getPrice(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getPrice(soap, data), 0) || soap_put_ns2__getPrice(soap, data, "ns2:getPrice", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getPrice
#define soap_PUT_ns2__getPrice(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getPrice(soap, data), 0) || soap_put_ns2__getPrice(soap, data, "ns2:getPrice", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getPrice
#define soap_POST_send_ns2__getPrice(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getPrice(soap, data), 0) || soap_put_ns2__getPrice(soap, data, "ns2:getPrice", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getPrice * SOAP_FMAC4 soap_get_ns2__getPrice(struct soap*, struct ns2__getPrice *, const char*, const char*);

#ifndef soap_read_ns2__getPrice
#define soap_read_ns2__getPrice(soap, data) ( ((data) ? (soap_default_ns2__getPrice(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getPrice(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getPrice
#define soap_GET_ns2__getPrice(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getPrice(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getPrice
#define soap_POST_recv_ns2__getPrice(soap, data) ( soap_read_ns2__getPrice(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getPriceResponse_DEFINED
#define SOAP_TYPE_ns2__getPriceResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getPriceResponse(struct soap*, struct ns2__getPriceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getPriceResponse(struct soap*, const struct ns2__getPriceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getPriceResponse(struct soap*, const char*, int, const struct ns2__getPriceResponse *, const char*);
SOAP_FMAC3 struct ns2__getPriceResponse * SOAP_FMAC4 soap_in_ns2__getPriceResponse(struct soap*, const char*, struct ns2__getPriceResponse *, const char*);

SOAP_FMAC3 struct ns2__getPriceResponse * SOAP_FMAC4 soap_new_ns2__getPriceResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getPriceResponse(struct soap*, const struct ns2__getPriceResponse *, const char*, const char*);

#ifndef soap_write_ns2__getPriceResponse
#define soap_write_ns2__getPriceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getPriceResponse(soap, data), 0) || soap_put_ns2__getPriceResponse(soap, data, "ns2:getPriceResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getPriceResponse
#define soap_PUT_ns2__getPriceResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getPriceResponse(soap, data), 0) || soap_put_ns2__getPriceResponse(soap, data, "ns2:getPriceResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getPriceResponse
#define soap_POST_send_ns2__getPriceResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getPriceResponse(soap, data), 0) || soap_put_ns2__getPriceResponse(soap, data, "ns2:getPriceResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getPriceResponse * SOAP_FMAC4 soap_get_ns2__getPriceResponse(struct soap*, struct ns2__getPriceResponse *, const char*, const char*);

#ifndef soap_read_ns2__getPriceResponse
#define soap_read_ns2__getPriceResponse(soap, data) ( ((data) ? (soap_default_ns2__getPriceResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getPriceResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getPriceResponse
#define soap_GET_ns2__getPriceResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getPriceResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getPriceResponse
#define soap_POST_recv_ns2__getPriceResponse(soap, data) ( soap_read_ns2__getPriceResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getCertificate_DEFINED
#define SOAP_TYPE_ns2__getCertificate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getCertificate(struct soap*, struct ns2__getCertificate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getCertificate(struct soap*, const struct ns2__getCertificate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getCertificate(struct soap*, const char*, int, const struct ns2__getCertificate *, const char*);
SOAP_FMAC3 struct ns2__getCertificate * SOAP_FMAC4 soap_in_ns2__getCertificate(struct soap*, const char*, struct ns2__getCertificate *, const char*);

SOAP_FMAC3 struct ns2__getCertificate * SOAP_FMAC4 soap_new_ns2__getCertificate(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getCertificate(struct soap*, const struct ns2__getCertificate *, const char*, const char*);

#ifndef soap_write_ns2__getCertificate
#define soap_write_ns2__getCertificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getCertificate(soap, data), 0) || soap_put_ns2__getCertificate(soap, data, "ns2:getCertificate", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getCertificate
#define soap_PUT_ns2__getCertificate(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getCertificate(soap, data), 0) || soap_put_ns2__getCertificate(soap, data, "ns2:getCertificate", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getCertificate
#define soap_POST_send_ns2__getCertificate(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getCertificate(soap, data), 0) || soap_put_ns2__getCertificate(soap, data, "ns2:getCertificate", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getCertificate * SOAP_FMAC4 soap_get_ns2__getCertificate(struct soap*, struct ns2__getCertificate *, const char*, const char*);

#ifndef soap_read_ns2__getCertificate
#define soap_read_ns2__getCertificate(soap, data) ( ((data) ? (soap_default_ns2__getCertificate(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getCertificate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getCertificate
#define soap_GET_ns2__getCertificate(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getCertificate(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getCertificate
#define soap_POST_recv_ns2__getCertificate(soap, data) ( soap_read_ns2__getCertificate(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getCertificateResponse_DEFINED
#define SOAP_TYPE_ns2__getCertificateResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getCertificateResponse(struct soap*, struct ns2__getCertificateResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getCertificateResponse(struct soap*, const struct ns2__getCertificateResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getCertificateResponse(struct soap*, const char*, int, const struct ns2__getCertificateResponse *, const char*);
SOAP_FMAC3 struct ns2__getCertificateResponse * SOAP_FMAC4 soap_in_ns2__getCertificateResponse(struct soap*, const char*, struct ns2__getCertificateResponse *, const char*);

SOAP_FMAC3 struct ns2__getCertificateResponse * SOAP_FMAC4 soap_new_ns2__getCertificateResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getCertificateResponse(struct soap*, const struct ns2__getCertificateResponse *, const char*, const char*);

#ifndef soap_write_ns2__getCertificateResponse
#define soap_write_ns2__getCertificateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getCertificateResponse(soap, data), 0) || soap_put_ns2__getCertificateResponse(soap, data, "ns2:getCertificateResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getCertificateResponse
#define soap_PUT_ns2__getCertificateResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getCertificateResponse(soap, data), 0) || soap_put_ns2__getCertificateResponse(soap, data, "ns2:getCertificateResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getCertificateResponse
#define soap_POST_send_ns2__getCertificateResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getCertificateResponse(soap, data), 0) || soap_put_ns2__getCertificateResponse(soap, data, "ns2:getCertificateResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getCertificateResponse * SOAP_FMAC4 soap_get_ns2__getCertificateResponse(struct soap*, struct ns2__getCertificateResponse *, const char*, const char*);

#ifndef soap_read_ns2__getCertificateResponse
#define soap_read_ns2__getCertificateResponse(soap, data) ( ((data) ? (soap_default_ns2__getCertificateResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getCertificateResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getCertificateResponse
#define soap_GET_ns2__getCertificateResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getCertificateResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getCertificateResponse
#define soap_POST_recv_ns2__getCertificateResponse(soap, data) ( soap_read_ns2__getCertificateResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getSenders_DEFINED
#define SOAP_TYPE_ns2__getSenders_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getSenders(struct soap*, struct ns2__getSenders *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getSenders(struct soap*, const struct ns2__getSenders *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getSenders(struct soap*, const char*, int, const struct ns2__getSenders *, const char*);
SOAP_FMAC3 struct ns2__getSenders * SOAP_FMAC4 soap_in_ns2__getSenders(struct soap*, const char*, struct ns2__getSenders *, const char*);

SOAP_FMAC3 struct ns2__getSenders * SOAP_FMAC4 soap_new_ns2__getSenders(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getSenders(struct soap*, const struct ns2__getSenders *, const char*, const char*);

#ifndef soap_write_ns2__getSenders
#define soap_write_ns2__getSenders(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getSenders(soap, data), 0) || soap_put_ns2__getSenders(soap, data, "ns2:getSenders", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getSenders
#define soap_PUT_ns2__getSenders(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getSenders(soap, data), 0) || soap_put_ns2__getSenders(soap, data, "ns2:getSenders", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getSenders
#define soap_POST_send_ns2__getSenders(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getSenders(soap, data), 0) || soap_put_ns2__getSenders(soap, data, "ns2:getSenders", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getSenders * SOAP_FMAC4 soap_get_ns2__getSenders(struct soap*, struct ns2__getSenders *, const char*, const char*);

#ifndef soap_read_ns2__getSenders
#define soap_read_ns2__getSenders(soap, data) ( ((data) ? (soap_default_ns2__getSenders(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getSenders(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getSenders
#define soap_GET_ns2__getSenders(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getSenders(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getSenders
#define soap_POST_recv_ns2__getSenders(soap, data) ( soap_read_ns2__getSenders(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getSendersResponse_DEFINED
#define SOAP_TYPE_ns2__getSendersResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getSendersResponse(struct soap*, struct ns2__getSendersResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getSendersResponse(struct soap*, const struct ns2__getSendersResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getSendersResponse(struct soap*, const char*, int, const struct ns2__getSendersResponse *, const char*);
SOAP_FMAC3 struct ns2__getSendersResponse * SOAP_FMAC4 soap_in_ns2__getSendersResponse(struct soap*, const char*, struct ns2__getSendersResponse *, const char*);

SOAP_FMAC3 struct ns2__getSendersResponse * SOAP_FMAC4 soap_new_ns2__getSendersResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getSendersResponse(struct soap*, const struct ns2__getSendersResponse *, const char*, const char*);

#ifndef soap_write_ns2__getSendersResponse
#define soap_write_ns2__getSendersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getSendersResponse(soap, data), 0) || soap_put_ns2__getSendersResponse(soap, data, "ns2:getSendersResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getSendersResponse
#define soap_PUT_ns2__getSendersResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getSendersResponse(soap, data), 0) || soap_put_ns2__getSendersResponse(soap, data, "ns2:getSendersResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getSendersResponse
#define soap_POST_send_ns2__getSendersResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getSendersResponse(soap, data), 0) || soap_put_ns2__getSendersResponse(soap, data, "ns2:getSendersResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getSendersResponse * SOAP_FMAC4 soap_get_ns2__getSendersResponse(struct soap*, struct ns2__getSendersResponse *, const char*, const char*);

#ifndef soap_read_ns2__getSendersResponse
#define soap_read_ns2__getSendersResponse(soap, data) ( ((data) ? (soap_default_ns2__getSendersResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getSendersResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getSendersResponse
#define soap_GET_ns2__getSendersResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getSendersResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getSendersResponse
#define soap_POST_recv_ns2__getSendersResponse(soap, data) ( soap_read_ns2__getSendersResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getConfigProfiles_DEFINED
#define SOAP_TYPE_ns2__getConfigProfiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getConfigProfiles(struct soap*, struct ns2__getConfigProfiles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getConfigProfiles(struct soap*, const struct ns2__getConfigProfiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getConfigProfiles(struct soap*, const char*, int, const struct ns2__getConfigProfiles *, const char*);
SOAP_FMAC3 struct ns2__getConfigProfiles * SOAP_FMAC4 soap_in_ns2__getConfigProfiles(struct soap*, const char*, struct ns2__getConfigProfiles *, const char*);

SOAP_FMAC3 struct ns2__getConfigProfiles * SOAP_FMAC4 soap_new_ns2__getConfigProfiles(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getConfigProfiles(struct soap*, const struct ns2__getConfigProfiles *, const char*, const char*);

#ifndef soap_write_ns2__getConfigProfiles
#define soap_write_ns2__getConfigProfiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getConfigProfiles(soap, data), 0) || soap_put_ns2__getConfigProfiles(soap, data, "ns2:getConfigProfiles", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getConfigProfiles
#define soap_PUT_ns2__getConfigProfiles(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getConfigProfiles(soap, data), 0) || soap_put_ns2__getConfigProfiles(soap, data, "ns2:getConfigProfiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getConfigProfiles
#define soap_POST_send_ns2__getConfigProfiles(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getConfigProfiles(soap, data), 0) || soap_put_ns2__getConfigProfiles(soap, data, "ns2:getConfigProfiles", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getConfigProfiles * SOAP_FMAC4 soap_get_ns2__getConfigProfiles(struct soap*, struct ns2__getConfigProfiles *, const char*, const char*);

#ifndef soap_read_ns2__getConfigProfiles
#define soap_read_ns2__getConfigProfiles(soap, data) ( ((data) ? (soap_default_ns2__getConfigProfiles(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getConfigProfiles(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getConfigProfiles
#define soap_GET_ns2__getConfigProfiles(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getConfigProfiles(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getConfigProfiles
#define soap_POST_recv_ns2__getConfigProfiles(soap, data) ( soap_read_ns2__getConfigProfiles(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getConfigProfilesResponse_DEFINED
#define SOAP_TYPE_ns2__getConfigProfilesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getConfigProfilesResponse(struct soap*, struct ns2__getConfigProfilesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getConfigProfilesResponse(struct soap*, const struct ns2__getConfigProfilesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getConfigProfilesResponse(struct soap*, const char*, int, const struct ns2__getConfigProfilesResponse *, const char*);
SOAP_FMAC3 struct ns2__getConfigProfilesResponse * SOAP_FMAC4 soap_in_ns2__getConfigProfilesResponse(struct soap*, const char*, struct ns2__getConfigProfilesResponse *, const char*);

SOAP_FMAC3 struct ns2__getConfigProfilesResponse * SOAP_FMAC4 soap_new_ns2__getConfigProfilesResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getConfigProfilesResponse(struct soap*, const struct ns2__getConfigProfilesResponse *, const char*, const char*);

#ifndef soap_write_ns2__getConfigProfilesResponse
#define soap_write_ns2__getConfigProfilesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getConfigProfilesResponse(soap, data), 0) || soap_put_ns2__getConfigProfilesResponse(soap, data, "ns2:getConfigProfilesResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getConfigProfilesResponse
#define soap_PUT_ns2__getConfigProfilesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getConfigProfilesResponse(soap, data), 0) || soap_put_ns2__getConfigProfilesResponse(soap, data, "ns2:getConfigProfilesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getConfigProfilesResponse
#define soap_POST_send_ns2__getConfigProfilesResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getConfigProfilesResponse(soap, data), 0) || soap_put_ns2__getConfigProfilesResponse(soap, data, "ns2:getConfigProfilesResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getConfigProfilesResponse * SOAP_FMAC4 soap_get_ns2__getConfigProfilesResponse(struct soap*, struct ns2__getConfigProfilesResponse *, const char*, const char*);

#ifndef soap_read_ns2__getConfigProfilesResponse
#define soap_read_ns2__getConfigProfilesResponse(soap, data) ( ((data) ? (soap_default_ns2__getConfigProfilesResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getConfigProfilesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getConfigProfilesResponse
#define soap_GET_ns2__getConfigProfilesResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getConfigProfilesResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getConfigProfilesResponse
#define soap_POST_recv_ns2__getConfigProfilesResponse(soap, data) ( soap_read_ns2__getConfigProfilesResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getBalance_DEFINED
#define SOAP_TYPE_ns2__getBalance_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getBalance(struct soap*, struct ns2__getBalance *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getBalance(struct soap*, const struct ns2__getBalance *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getBalance(struct soap*, const char*, int, const struct ns2__getBalance *, const char*);
SOAP_FMAC3 struct ns2__getBalance * SOAP_FMAC4 soap_in_ns2__getBalance(struct soap*, const char*, struct ns2__getBalance *, const char*);

SOAP_FMAC3 struct ns2__getBalance * SOAP_FMAC4 soap_new_ns2__getBalance(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getBalance(struct soap*, const struct ns2__getBalance *, const char*, const char*);

#ifndef soap_write_ns2__getBalance
#define soap_write_ns2__getBalance(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getBalance(soap, data), 0) || soap_put_ns2__getBalance(soap, data, "ns2:getBalance", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getBalance
#define soap_PUT_ns2__getBalance(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getBalance(soap, data), 0) || soap_put_ns2__getBalance(soap, data, "ns2:getBalance", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getBalance
#define soap_POST_send_ns2__getBalance(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getBalance(soap, data), 0) || soap_put_ns2__getBalance(soap, data, "ns2:getBalance", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getBalance * SOAP_FMAC4 soap_get_ns2__getBalance(struct soap*, struct ns2__getBalance *, const char*, const char*);

#ifndef soap_read_ns2__getBalance
#define soap_read_ns2__getBalance(soap, data) ( ((data) ? (soap_default_ns2__getBalance(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getBalance(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getBalance
#define soap_GET_ns2__getBalance(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getBalance(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getBalance
#define soap_POST_recv_ns2__getBalance(soap, data) ( soap_read_ns2__getBalance(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getBalanceResponse_DEFINED
#define SOAP_TYPE_ns2__getBalanceResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getBalanceResponse(struct soap*, struct ns2__getBalanceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getBalanceResponse(struct soap*, const struct ns2__getBalanceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getBalanceResponse(struct soap*, const char*, int, const struct ns2__getBalanceResponse *, const char*);
SOAP_FMAC3 struct ns2__getBalanceResponse * SOAP_FMAC4 soap_in_ns2__getBalanceResponse(struct soap*, const char*, struct ns2__getBalanceResponse *, const char*);

SOAP_FMAC3 struct ns2__getBalanceResponse * SOAP_FMAC4 soap_new_ns2__getBalanceResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getBalanceResponse(struct soap*, const struct ns2__getBalanceResponse *, const char*, const char*);

#ifndef soap_write_ns2__getBalanceResponse
#define soap_write_ns2__getBalanceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getBalanceResponse(soap, data), 0) || soap_put_ns2__getBalanceResponse(soap, data, "ns2:getBalanceResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getBalanceResponse
#define soap_PUT_ns2__getBalanceResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getBalanceResponse(soap, data), 0) || soap_put_ns2__getBalanceResponse(soap, data, "ns2:getBalanceResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getBalanceResponse
#define soap_POST_send_ns2__getBalanceResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getBalanceResponse(soap, data), 0) || soap_put_ns2__getBalanceResponse(soap, data, "ns2:getBalanceResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getBalanceResponse * SOAP_FMAC4 soap_get_ns2__getBalanceResponse(struct soap*, struct ns2__getBalanceResponse *, const char*, const char*);

#ifndef soap_read_ns2__getBalanceResponse
#define soap_read_ns2__getBalanceResponse(soap, data) ( ((data) ? (soap_default_ns2__getBalanceResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getBalanceResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getBalanceResponse
#define soap_GET_ns2__getBalanceResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getBalanceResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getBalanceResponse
#define soap_POST_recv_ns2__getBalanceResponse(soap, data) ( soap_read_ns2__getBalanceResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getDispatchStatus_DEFINED
#define SOAP_TYPE_ns2__getDispatchStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getDispatchStatus(struct soap*, struct ns2__getDispatchStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getDispatchStatus(struct soap*, const struct ns2__getDispatchStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getDispatchStatus(struct soap*, const char*, int, const struct ns2__getDispatchStatus *, const char*);
SOAP_FMAC3 struct ns2__getDispatchStatus * SOAP_FMAC4 soap_in_ns2__getDispatchStatus(struct soap*, const char*, struct ns2__getDispatchStatus *, const char*);

SOAP_FMAC3 struct ns2__getDispatchStatus * SOAP_FMAC4 soap_new_ns2__getDispatchStatus(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getDispatchStatus(struct soap*, const struct ns2__getDispatchStatus *, const char*, const char*);

#ifndef soap_write_ns2__getDispatchStatus
#define soap_write_ns2__getDispatchStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getDispatchStatus(soap, data), 0) || soap_put_ns2__getDispatchStatus(soap, data, "ns2:getDispatchStatus", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getDispatchStatus
#define soap_PUT_ns2__getDispatchStatus(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getDispatchStatus(soap, data), 0) || soap_put_ns2__getDispatchStatus(soap, data, "ns2:getDispatchStatus", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getDispatchStatus
#define soap_POST_send_ns2__getDispatchStatus(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getDispatchStatus(soap, data), 0) || soap_put_ns2__getDispatchStatus(soap, data, "ns2:getDispatchStatus", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getDispatchStatus * SOAP_FMAC4 soap_get_ns2__getDispatchStatus(struct soap*, struct ns2__getDispatchStatus *, const char*, const char*);

#ifndef soap_read_ns2__getDispatchStatus
#define soap_read_ns2__getDispatchStatus(soap, data) ( ((data) ? (soap_default_ns2__getDispatchStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getDispatchStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getDispatchStatus
#define soap_GET_ns2__getDispatchStatus(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getDispatchStatus(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getDispatchStatus
#define soap_POST_recv_ns2__getDispatchStatus(soap, data) ( soap_read_ns2__getDispatchStatus(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__getDispatchStatusResponse_DEFINED
#define SOAP_TYPE_ns2__getDispatchStatusResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getDispatchStatusResponse(struct soap*, struct ns2__getDispatchStatusResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getDispatchStatusResponse(struct soap*, const struct ns2__getDispatchStatusResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getDispatchStatusResponse(struct soap*, const char*, int, const struct ns2__getDispatchStatusResponse *, const char*);
SOAP_FMAC3 struct ns2__getDispatchStatusResponse * SOAP_FMAC4 soap_in_ns2__getDispatchStatusResponse(struct soap*, const char*, struct ns2__getDispatchStatusResponse *, const char*);

SOAP_FMAC3 struct ns2__getDispatchStatusResponse * SOAP_FMAC4 soap_new_ns2__getDispatchStatusResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getDispatchStatusResponse(struct soap*, const struct ns2__getDispatchStatusResponse *, const char*, const char*);

#ifndef soap_write_ns2__getDispatchStatusResponse
#define soap_write_ns2__getDispatchStatusResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getDispatchStatusResponse(soap, data), 0) || soap_put_ns2__getDispatchStatusResponse(soap, data, "ns2:getDispatchStatusResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__getDispatchStatusResponse
#define soap_PUT_ns2__getDispatchStatusResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getDispatchStatusResponse(soap, data), 0) || soap_put_ns2__getDispatchStatusResponse(soap, data, "ns2:getDispatchStatusResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__getDispatchStatusResponse
#define soap_POST_send_ns2__getDispatchStatusResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__getDispatchStatusResponse(soap, data), 0) || soap_put_ns2__getDispatchStatusResponse(soap, data, "ns2:getDispatchStatusResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getDispatchStatusResponse * SOAP_FMAC4 soap_get_ns2__getDispatchStatusResponse(struct soap*, struct ns2__getDispatchStatusResponse *, const char*, const char*);

#ifndef soap_read_ns2__getDispatchStatusResponse
#define soap_read_ns2__getDispatchStatusResponse(soap, data) ( ((data) ? (soap_default_ns2__getDispatchStatusResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__getDispatchStatusResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__getDispatchStatusResponse
#define soap_GET_ns2__getDispatchStatusResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__getDispatchStatusResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__getDispatchStatusResponse
#define soap_POST_recv_ns2__getDispatchStatusResponse(soap, data) ( soap_read_ns2__getDispatchStatusResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__dispatch_DEFINED
#define SOAP_TYPE_ns2__dispatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__dispatch(struct soap*, struct ns2__dispatch *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__dispatch(struct soap*, const struct ns2__dispatch *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__dispatch(struct soap*, const char*, int, const struct ns2__dispatch *, const char*);
SOAP_FMAC3 struct ns2__dispatch * SOAP_FMAC4 soap_in_ns2__dispatch(struct soap*, const char*, struct ns2__dispatch *, const char*);

SOAP_FMAC3 struct ns2__dispatch * SOAP_FMAC4 soap_new_ns2__dispatch(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__dispatch(struct soap*, const struct ns2__dispatch *, const char*, const char*);

#ifndef soap_write_ns2__dispatch
#define soap_write_ns2__dispatch(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__dispatch(soap, data), 0) || soap_put_ns2__dispatch(soap, data, "ns2:dispatch", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__dispatch
#define soap_PUT_ns2__dispatch(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__dispatch(soap, data), 0) || soap_put_ns2__dispatch(soap, data, "ns2:dispatch", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__dispatch
#define soap_POST_send_ns2__dispatch(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__dispatch(soap, data), 0) || soap_put_ns2__dispatch(soap, data, "ns2:dispatch", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__dispatch * SOAP_FMAC4 soap_get_ns2__dispatch(struct soap*, struct ns2__dispatch *, const char*, const char*);

#ifndef soap_read_ns2__dispatch
#define soap_read_ns2__dispatch(soap, data) ( ((data) ? (soap_default_ns2__dispatch(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__dispatch(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__dispatch
#define soap_GET_ns2__dispatch(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__dispatch(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__dispatch
#define soap_POST_recv_ns2__dispatch(soap, data) ( soap_read_ns2__dispatch(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__dispatchResponse_DEFINED
#define SOAP_TYPE_ns2__dispatchResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__dispatchResponse(struct soap*, struct ns2__dispatchResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__dispatchResponse(struct soap*, const struct ns2__dispatchResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__dispatchResponse(struct soap*, const char*, int, const struct ns2__dispatchResponse *, const char*);
SOAP_FMAC3 struct ns2__dispatchResponse * SOAP_FMAC4 soap_in_ns2__dispatchResponse(struct soap*, const char*, struct ns2__dispatchResponse *, const char*);

SOAP_FMAC3 struct ns2__dispatchResponse * SOAP_FMAC4 soap_new_ns2__dispatchResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__dispatchResponse(struct soap*, const struct ns2__dispatchResponse *, const char*, const char*);

#ifndef soap_write_ns2__dispatchResponse
#define soap_write_ns2__dispatchResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__dispatchResponse(soap, data), 0) || soap_put_ns2__dispatchResponse(soap, data, "ns2:dispatchResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns2__dispatchResponse
#define soap_PUT_ns2__dispatchResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__dispatchResponse(soap, data), 0) || soap_put_ns2__dispatchResponse(soap, data, "ns2:dispatchResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns2__dispatchResponse
#define soap_POST_send_ns2__dispatchResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns2__dispatchResponse(soap, data), 0) || soap_put_ns2__dispatchResponse(soap, data, "ns2:dispatchResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__dispatchResponse * SOAP_FMAC4 soap_get_ns2__dispatchResponse(struct soap*, struct ns2__dispatchResponse *, const char*, const char*);

#ifndef soap_read_ns2__dispatchResponse
#define soap_read_ns2__dispatchResponse(soap, data) ( ((data) ? (soap_default_ns2__dispatchResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__dispatchResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns2__dispatchResponse
#define soap_GET_ns2__dispatchResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns2__dispatchResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns2__dispatchResponse
#define soap_POST_recv_ns2__dispatchResponse(soap, data) ( soap_read_ns2__dispatchResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ArrayOfDispatchIds_DEFINED
#define SOAP_TYPE_ArrayOfDispatchIds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ArrayOfDispatchIds(struct soap*, struct ArrayOfDispatchIds *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ArrayOfDispatchIds(struct soap*, const struct ArrayOfDispatchIds *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ArrayOfDispatchIds(struct soap*, const char*, int, const struct ArrayOfDispatchIds *, const char*);
SOAP_FMAC3 struct ArrayOfDispatchIds * SOAP_FMAC4 soap_in_ArrayOfDispatchIds(struct soap*, const char*, struct ArrayOfDispatchIds *, const char*);

SOAP_FMAC3 struct ArrayOfDispatchIds * SOAP_FMAC4 soap_new_ArrayOfDispatchIds(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ArrayOfDispatchIds(struct soap*, const struct ArrayOfDispatchIds *, const char*, const char*);

#ifndef soap_write_ArrayOfDispatchIds
#define soap_write_ArrayOfDispatchIds(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ArrayOfDispatchIds(soap, data), 0) || soap_put_ArrayOfDispatchIds(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ArrayOfDispatchIds
#define soap_PUT_ArrayOfDispatchIds(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfDispatchIds(soap, data), 0) || soap_put_ArrayOfDispatchIds(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ArrayOfDispatchIds
#define soap_POST_send_ArrayOfDispatchIds(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfDispatchIds(soap, data), 0) || soap_put_ArrayOfDispatchIds(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ArrayOfDispatchIds * SOAP_FMAC4 soap_get_ArrayOfDispatchIds(struct soap*, struct ArrayOfDispatchIds *, const char*, const char*);

#ifndef soap_read_ArrayOfDispatchIds
#define soap_read_ArrayOfDispatchIds(soap, data) ( ((data) ? (soap_default_ArrayOfDispatchIds(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ArrayOfDispatchIds(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ArrayOfDispatchIds
#define soap_GET_ArrayOfDispatchIds(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ArrayOfDispatchIds(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ArrayOfDispatchIds
#define soap_POST_recv_ArrayOfDispatchIds(soap, data) ( soap_read_ArrayOfDispatchIds(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ArrayOfOptions_DEFINED
#define SOAP_TYPE_ArrayOfOptions_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ArrayOfOptions(struct soap*, struct ArrayOfOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ArrayOfOptions(struct soap*, const struct ArrayOfOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ArrayOfOptions(struct soap*, const char*, int, const struct ArrayOfOptions *, const char*);
SOAP_FMAC3 struct ArrayOfOptions * SOAP_FMAC4 soap_in_ArrayOfOptions(struct soap*, const char*, struct ArrayOfOptions *, const char*);

SOAP_FMAC3 struct ArrayOfOptions * SOAP_FMAC4 soap_new_ArrayOfOptions(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ArrayOfOptions(struct soap*, const struct ArrayOfOptions *, const char*, const char*);

#ifndef soap_write_ArrayOfOptions
#define soap_write_ArrayOfOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ArrayOfOptions(soap, data), 0) || soap_put_ArrayOfOptions(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ArrayOfOptions
#define soap_PUT_ArrayOfOptions(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfOptions(soap, data), 0) || soap_put_ArrayOfOptions(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ArrayOfOptions
#define soap_POST_send_ArrayOfOptions(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfOptions(soap, data), 0) || soap_put_ArrayOfOptions(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ArrayOfOptions * SOAP_FMAC4 soap_get_ArrayOfOptions(struct soap*, struct ArrayOfOptions *, const char*, const char*);

#ifndef soap_read_ArrayOfOptions
#define soap_read_ArrayOfOptions(soap, data) ( ((data) ? (soap_default_ArrayOfOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ArrayOfOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ArrayOfOptions
#define soap_GET_ArrayOfOptions(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ArrayOfOptions(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ArrayOfOptions
#define soap_POST_recv_ArrayOfOptions(soap, data) ( soap_read_ArrayOfOptions(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ArrayOfRecipients_DEFINED
#define SOAP_TYPE_ArrayOfRecipients_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ArrayOfRecipients(struct soap*, struct ArrayOfRecipients *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ArrayOfRecipients(struct soap*, const struct ArrayOfRecipients *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ArrayOfRecipients(struct soap*, const char*, int, const struct ArrayOfRecipients *, const char*);
SOAP_FMAC3 struct ArrayOfRecipients * SOAP_FMAC4 soap_in_ArrayOfRecipients(struct soap*, const char*, struct ArrayOfRecipients *, const char*);

SOAP_FMAC3 struct ArrayOfRecipients * SOAP_FMAC4 soap_new_ArrayOfRecipients(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ArrayOfRecipients(struct soap*, const struct ArrayOfRecipients *, const char*, const char*);

#ifndef soap_write_ArrayOfRecipients
#define soap_write_ArrayOfRecipients(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ArrayOfRecipients(soap, data), 0) || soap_put_ArrayOfRecipients(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ArrayOfRecipients
#define soap_PUT_ArrayOfRecipients(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfRecipients(soap, data), 0) || soap_put_ArrayOfRecipients(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ArrayOfRecipients
#define soap_POST_send_ArrayOfRecipients(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfRecipients(soap, data), 0) || soap_put_ArrayOfRecipients(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ArrayOfRecipients * SOAP_FMAC4 soap_get_ArrayOfRecipients(struct soap*, struct ArrayOfRecipients *, const char*, const char*);

#ifndef soap_read_ArrayOfRecipients
#define soap_read_ArrayOfRecipients(soap, data) ( ((data) ? (soap_default_ArrayOfRecipients(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ArrayOfRecipients(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ArrayOfRecipients
#define soap_GET_ArrayOfRecipients(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ArrayOfRecipients(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ArrayOfRecipients
#define soap_POST_recv_ArrayOfRecipients(soap, data) ( soap_read_ArrayOfRecipients(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ArrayOfDocumentFiles_DEFINED
#define SOAP_TYPE_ArrayOfDocumentFiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ArrayOfDocumentFiles(struct soap*, struct ArrayOfDocumentFiles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ArrayOfDocumentFiles(struct soap*, const struct ArrayOfDocumentFiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ArrayOfDocumentFiles(struct soap*, const char*, int, const struct ArrayOfDocumentFiles *, const char*);
SOAP_FMAC3 struct ArrayOfDocumentFiles * SOAP_FMAC4 soap_in_ArrayOfDocumentFiles(struct soap*, const char*, struct ArrayOfDocumentFiles *, const char*);

SOAP_FMAC3 struct ArrayOfDocumentFiles * SOAP_FMAC4 soap_new_ArrayOfDocumentFiles(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ArrayOfDocumentFiles(struct soap*, const struct ArrayOfDocumentFiles *, const char*, const char*);

#ifndef soap_write_ArrayOfDocumentFiles
#define soap_write_ArrayOfDocumentFiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ArrayOfDocumentFiles(soap, data), 0) || soap_put_ArrayOfDocumentFiles(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ArrayOfDocumentFiles
#define soap_PUT_ArrayOfDocumentFiles(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfDocumentFiles(soap, data), 0) || soap_put_ArrayOfDocumentFiles(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ArrayOfDocumentFiles
#define soap_POST_send_ArrayOfDocumentFiles(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfDocumentFiles(soap, data), 0) || soap_put_ArrayOfDocumentFiles(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ArrayOfDocumentFiles * SOAP_FMAC4 soap_get_ArrayOfDocumentFiles(struct soap*, struct ArrayOfDocumentFiles *, const char*, const char*);

#ifndef soap_read_ArrayOfDocumentFiles
#define soap_read_ArrayOfDocumentFiles(soap, data) ( ((data) ? (soap_default_ArrayOfDocumentFiles(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ArrayOfDocumentFiles(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ArrayOfDocumentFiles
#define soap_GET_ArrayOfDocumentFiles(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ArrayOfDocumentFiles(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ArrayOfDocumentFiles
#define soap_POST_recv_ArrayOfDocumentFiles(soap, data) ( soap_read_ArrayOfDocumentFiles(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__RemoveSenderReturnObject_DEFINED
#define SOAP_TYPE_ns1__RemoveSenderReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__RemoveSenderReturnObject(struct soap*, struct ns1__RemoveSenderReturnObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__RemoveSenderReturnObject(struct soap*, const struct ns1__RemoveSenderReturnObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__RemoveSenderReturnObject(struct soap*, const char*, int, const struct ns1__RemoveSenderReturnObject *, const char*);
SOAP_FMAC3 struct ns1__RemoveSenderReturnObject * SOAP_FMAC4 soap_in_ns1__RemoveSenderReturnObject(struct soap*, const char*, struct ns1__RemoveSenderReturnObject *, const char*);

SOAP_FMAC3 struct ns1__RemoveSenderReturnObject * SOAP_FMAC4 soap_new_ns1__RemoveSenderReturnObject(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__RemoveSenderReturnObject(struct soap*, const struct ns1__RemoveSenderReturnObject *, const char*, const char*);

#ifndef soap_write_ns1__RemoveSenderReturnObject
#define soap_write_ns1__RemoveSenderReturnObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__RemoveSenderReturnObject(soap, data), 0) || soap_put_ns1__RemoveSenderReturnObject(soap, data, "ns1:RemoveSenderReturnObject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__RemoveSenderReturnObject
#define soap_PUT_ns1__RemoveSenderReturnObject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__RemoveSenderReturnObject(soap, data), 0) || soap_put_ns1__RemoveSenderReturnObject(soap, data, "ns1:RemoveSenderReturnObject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__RemoveSenderReturnObject
#define soap_POST_send_ns1__RemoveSenderReturnObject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__RemoveSenderReturnObject(soap, data), 0) || soap_put_ns1__RemoveSenderReturnObject(soap, data, "ns1:RemoveSenderReturnObject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__RemoveSenderReturnObject * SOAP_FMAC4 soap_get_ns1__RemoveSenderReturnObject(struct soap*, struct ns1__RemoveSenderReturnObject *, const char*, const char*);

#ifndef soap_read_ns1__RemoveSenderReturnObject
#define soap_read_ns1__RemoveSenderReturnObject(soap, data) ( ((data) ? (soap_default_ns1__RemoveSenderReturnObject(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__RemoveSenderReturnObject(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__RemoveSenderReturnObject
#define soap_GET_ns1__RemoveSenderReturnObject(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__RemoveSenderReturnObject(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__RemoveSenderReturnObject
#define soap_POST_recv_ns1__RemoveSenderReturnObject(soap, data) ( soap_read_ns1__RemoveSenderReturnObject(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__VerifySenderReturnObject_DEFINED
#define SOAP_TYPE_ns1__VerifySenderReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__VerifySenderReturnObject(struct soap*, struct ns1__VerifySenderReturnObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__VerifySenderReturnObject(struct soap*, const struct ns1__VerifySenderReturnObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__VerifySenderReturnObject(struct soap*, const char*, int, const struct ns1__VerifySenderReturnObject *, const char*);
SOAP_FMAC3 struct ns1__VerifySenderReturnObject * SOAP_FMAC4 soap_in_ns1__VerifySenderReturnObject(struct soap*, const char*, struct ns1__VerifySenderReturnObject *, const char*);

SOAP_FMAC3 struct ns1__VerifySenderReturnObject * SOAP_FMAC4 soap_new_ns1__VerifySenderReturnObject(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__VerifySenderReturnObject(struct soap*, const struct ns1__VerifySenderReturnObject *, const char*, const char*);

#ifndef soap_write_ns1__VerifySenderReturnObject
#define soap_write_ns1__VerifySenderReturnObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__VerifySenderReturnObject(soap, data), 0) || soap_put_ns1__VerifySenderReturnObject(soap, data, "ns1:VerifySenderReturnObject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__VerifySenderReturnObject
#define soap_PUT_ns1__VerifySenderReturnObject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__VerifySenderReturnObject(soap, data), 0) || soap_put_ns1__VerifySenderReturnObject(soap, data, "ns1:VerifySenderReturnObject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__VerifySenderReturnObject
#define soap_POST_send_ns1__VerifySenderReturnObject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__VerifySenderReturnObject(soap, data), 0) || soap_put_ns1__VerifySenderReturnObject(soap, data, "ns1:VerifySenderReturnObject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__VerifySenderReturnObject * SOAP_FMAC4 soap_get_ns1__VerifySenderReturnObject(struct soap*, struct ns1__VerifySenderReturnObject *, const char*, const char*);

#ifndef soap_read_ns1__VerifySenderReturnObject
#define soap_read_ns1__VerifySenderReturnObject(soap, data) ( ((data) ? (soap_default_ns1__VerifySenderReturnObject(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__VerifySenderReturnObject(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__VerifySenderReturnObject
#define soap_GET_ns1__VerifySenderReturnObject(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__VerifySenderReturnObject(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__VerifySenderReturnObject
#define soap_POST_recv_ns1__VerifySenderReturnObject(soap, data) ( soap_read_ns1__VerifySenderReturnObject(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__AddSenderReturnObject_DEFINED
#define SOAP_TYPE_ns1__AddSenderReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__AddSenderReturnObject(struct soap*, struct ns1__AddSenderReturnObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__AddSenderReturnObject(struct soap*, const struct ns1__AddSenderReturnObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__AddSenderReturnObject(struct soap*, const char*, int, const struct ns1__AddSenderReturnObject *, const char*);
SOAP_FMAC3 struct ns1__AddSenderReturnObject * SOAP_FMAC4 soap_in_ns1__AddSenderReturnObject(struct soap*, const char*, struct ns1__AddSenderReturnObject *, const char*);

SOAP_FMAC3 struct ns1__AddSenderReturnObject * SOAP_FMAC4 soap_new_ns1__AddSenderReturnObject(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__AddSenderReturnObject(struct soap*, const struct ns1__AddSenderReturnObject *, const char*, const char*);

#ifndef soap_write_ns1__AddSenderReturnObject
#define soap_write_ns1__AddSenderReturnObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__AddSenderReturnObject(soap, data), 0) || soap_put_ns1__AddSenderReturnObject(soap, data, "ns1:AddSenderReturnObject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__AddSenderReturnObject
#define soap_PUT_ns1__AddSenderReturnObject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__AddSenderReturnObject(soap, data), 0) || soap_put_ns1__AddSenderReturnObject(soap, data, "ns1:AddSenderReturnObject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__AddSenderReturnObject
#define soap_POST_send_ns1__AddSenderReturnObject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__AddSenderReturnObject(soap, data), 0) || soap_put_ns1__AddSenderReturnObject(soap, data, "ns1:AddSenderReturnObject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__AddSenderReturnObject * SOAP_FMAC4 soap_get_ns1__AddSenderReturnObject(struct soap*, struct ns1__AddSenderReturnObject *, const char*, const char*);

#ifndef soap_read_ns1__AddSenderReturnObject
#define soap_read_ns1__AddSenderReturnObject(soap, data) ( ((data) ? (soap_default_ns1__AddSenderReturnObject(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__AddSenderReturnObject(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__AddSenderReturnObject
#define soap_GET_ns1__AddSenderReturnObject(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__AddSenderReturnObject(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__AddSenderReturnObject
#define soap_POST_recv_ns1__AddSenderReturnObject(soap, data) ( soap_read_ns1__AddSenderReturnObject(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ArrayOfShipmentsPrice_DEFINED
#define SOAP_TYPE_ArrayOfShipmentsPrice_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ArrayOfShipmentsPrice(struct soap*, struct ArrayOfShipmentsPrice *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ArrayOfShipmentsPrice(struct soap*, const struct ArrayOfShipmentsPrice *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ArrayOfShipmentsPrice(struct soap*, const char*, int, const struct ArrayOfShipmentsPrice *, const char*);
SOAP_FMAC3 struct ArrayOfShipmentsPrice * SOAP_FMAC4 soap_in_ArrayOfShipmentsPrice(struct soap*, const char*, struct ArrayOfShipmentsPrice *, const char*);

SOAP_FMAC3 struct ArrayOfShipmentsPrice * SOAP_FMAC4 soap_new_ArrayOfShipmentsPrice(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ArrayOfShipmentsPrice(struct soap*, const struct ArrayOfShipmentsPrice *, const char*, const char*);

#ifndef soap_write_ArrayOfShipmentsPrice
#define soap_write_ArrayOfShipmentsPrice(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ArrayOfShipmentsPrice(soap, data), 0) || soap_put_ArrayOfShipmentsPrice(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ArrayOfShipmentsPrice
#define soap_PUT_ArrayOfShipmentsPrice(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfShipmentsPrice(soap, data), 0) || soap_put_ArrayOfShipmentsPrice(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ArrayOfShipmentsPrice
#define soap_POST_send_ArrayOfShipmentsPrice(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfShipmentsPrice(soap, data), 0) || soap_put_ArrayOfShipmentsPrice(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ArrayOfShipmentsPrice * SOAP_FMAC4 soap_get_ArrayOfShipmentsPrice(struct soap*, struct ArrayOfShipmentsPrice *, const char*, const char*);

#ifndef soap_read_ArrayOfShipmentsPrice
#define soap_read_ArrayOfShipmentsPrice(soap, data) ( ((data) ? (soap_default_ArrayOfShipmentsPrice(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ArrayOfShipmentsPrice(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ArrayOfShipmentsPrice
#define soap_GET_ArrayOfShipmentsPrice(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ArrayOfShipmentsPrice(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ArrayOfShipmentsPrice
#define soap_POST_recv_ArrayOfShipmentsPrice(soap, data) ( soap_read_ArrayOfShipmentsPrice(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__PriceReturnObject_DEFINED
#define SOAP_TYPE_ns1__PriceReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__PriceReturnObject(struct soap*, struct ns1__PriceReturnObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__PriceReturnObject(struct soap*, const struct ns1__PriceReturnObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__PriceReturnObject(struct soap*, const char*, int, const struct ns1__PriceReturnObject *, const char*);
SOAP_FMAC3 struct ns1__PriceReturnObject * SOAP_FMAC4 soap_in_ns1__PriceReturnObject(struct soap*, const char*, struct ns1__PriceReturnObject *, const char*);

SOAP_FMAC3 struct ns1__PriceReturnObject * SOAP_FMAC4 soap_new_ns1__PriceReturnObject(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__PriceReturnObject(struct soap*, const struct ns1__PriceReturnObject *, const char*, const char*);

#ifndef soap_write_ns1__PriceReturnObject
#define soap_write_ns1__PriceReturnObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__PriceReturnObject(soap, data), 0) || soap_put_ns1__PriceReturnObject(soap, data, "ns1:PriceReturnObject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__PriceReturnObject
#define soap_PUT_ns1__PriceReturnObject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__PriceReturnObject(soap, data), 0) || soap_put_ns1__PriceReturnObject(soap, data, "ns1:PriceReturnObject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__PriceReturnObject
#define soap_POST_send_ns1__PriceReturnObject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__PriceReturnObject(soap, data), 0) || soap_put_ns1__PriceReturnObject(soap, data, "ns1:PriceReturnObject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__PriceReturnObject * SOAP_FMAC4 soap_get_ns1__PriceReturnObject(struct soap*, struct ns1__PriceReturnObject *, const char*, const char*);

#ifndef soap_read_ns1__PriceReturnObject
#define soap_read_ns1__PriceReturnObject(soap, data) ( ((data) ? (soap_default_ns1__PriceReturnObject(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__PriceReturnObject(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__PriceReturnObject
#define soap_GET_ns1__PriceReturnObject(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__PriceReturnObject(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__PriceReturnObject
#define soap_POST_recv_ns1__PriceReturnObject(soap, data) ( soap_read_ns1__PriceReturnObject(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__CertificateReturnObject_DEFINED
#define SOAP_TYPE_ns1__CertificateReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__CertificateReturnObject(struct soap*, struct ns1__CertificateReturnObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__CertificateReturnObject(struct soap*, const struct ns1__CertificateReturnObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__CertificateReturnObject(struct soap*, const char*, int, const struct ns1__CertificateReturnObject *, const char*);
SOAP_FMAC3 struct ns1__CertificateReturnObject * SOAP_FMAC4 soap_in_ns1__CertificateReturnObject(struct soap*, const char*, struct ns1__CertificateReturnObject *, const char*);

SOAP_FMAC3 struct ns1__CertificateReturnObject * SOAP_FMAC4 soap_new_ns1__CertificateReturnObject(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__CertificateReturnObject(struct soap*, const struct ns1__CertificateReturnObject *, const char*, const char*);

#ifndef soap_write_ns1__CertificateReturnObject
#define soap_write_ns1__CertificateReturnObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__CertificateReturnObject(soap, data), 0) || soap_put_ns1__CertificateReturnObject(soap, data, "ns1:CertificateReturnObject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__CertificateReturnObject
#define soap_PUT_ns1__CertificateReturnObject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__CertificateReturnObject(soap, data), 0) || soap_put_ns1__CertificateReturnObject(soap, data, "ns1:CertificateReturnObject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__CertificateReturnObject
#define soap_POST_send_ns1__CertificateReturnObject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__CertificateReturnObject(soap, data), 0) || soap_put_ns1__CertificateReturnObject(soap, data, "ns1:CertificateReturnObject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__CertificateReturnObject * SOAP_FMAC4 soap_get_ns1__CertificateReturnObject(struct soap*, struct ns1__CertificateReturnObject *, const char*, const char*);

#ifndef soap_read_ns1__CertificateReturnObject
#define soap_read_ns1__CertificateReturnObject(soap, data) ( ((data) ? (soap_default_ns1__CertificateReturnObject(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__CertificateReturnObject(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__CertificateReturnObject
#define soap_GET_ns1__CertificateReturnObject(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__CertificateReturnObject(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__CertificateReturnObject
#define soap_POST_recv_ns1__CertificateReturnObject(soap, data) ( soap_read_ns1__CertificateReturnObject(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ArrayOfSenders_DEFINED
#define SOAP_TYPE_ArrayOfSenders_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ArrayOfSenders(struct soap*, struct ArrayOfSenders *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ArrayOfSenders(struct soap*, const struct ArrayOfSenders *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ArrayOfSenders(struct soap*, const char*, int, const struct ArrayOfSenders *, const char*);
SOAP_FMAC3 struct ArrayOfSenders * SOAP_FMAC4 soap_in_ArrayOfSenders(struct soap*, const char*, struct ArrayOfSenders *, const char*);

SOAP_FMAC3 struct ArrayOfSenders * SOAP_FMAC4 soap_new_ArrayOfSenders(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ArrayOfSenders(struct soap*, const struct ArrayOfSenders *, const char*, const char*);

#ifndef soap_write_ArrayOfSenders
#define soap_write_ArrayOfSenders(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ArrayOfSenders(soap, data), 0) || soap_put_ArrayOfSenders(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ArrayOfSenders
#define soap_PUT_ArrayOfSenders(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfSenders(soap, data), 0) || soap_put_ArrayOfSenders(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ArrayOfSenders
#define soap_POST_send_ArrayOfSenders(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfSenders(soap, data), 0) || soap_put_ArrayOfSenders(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ArrayOfSenders * SOAP_FMAC4 soap_get_ArrayOfSenders(struct soap*, struct ArrayOfSenders *, const char*, const char*);

#ifndef soap_read_ArrayOfSenders
#define soap_read_ArrayOfSenders(soap, data) ( ((data) ? (soap_default_ArrayOfSenders(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ArrayOfSenders(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ArrayOfSenders
#define soap_GET_ArrayOfSenders(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ArrayOfSenders(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ArrayOfSenders
#define soap_POST_recv_ArrayOfSenders(soap, data) ( soap_read_ArrayOfSenders(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__SendersReturnObject_DEFINED
#define SOAP_TYPE_ns1__SendersReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__SendersReturnObject(struct soap*, struct ns1__SendersReturnObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__SendersReturnObject(struct soap*, const struct ns1__SendersReturnObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__SendersReturnObject(struct soap*, const char*, int, const struct ns1__SendersReturnObject *, const char*);
SOAP_FMAC3 struct ns1__SendersReturnObject * SOAP_FMAC4 soap_in_ns1__SendersReturnObject(struct soap*, const char*, struct ns1__SendersReturnObject *, const char*);

SOAP_FMAC3 struct ns1__SendersReturnObject * SOAP_FMAC4 soap_new_ns1__SendersReturnObject(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__SendersReturnObject(struct soap*, const struct ns1__SendersReturnObject *, const char*, const char*);

#ifndef soap_write_ns1__SendersReturnObject
#define soap_write_ns1__SendersReturnObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__SendersReturnObject(soap, data), 0) || soap_put_ns1__SendersReturnObject(soap, data, "ns1:SendersReturnObject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__SendersReturnObject
#define soap_PUT_ns1__SendersReturnObject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__SendersReturnObject(soap, data), 0) || soap_put_ns1__SendersReturnObject(soap, data, "ns1:SendersReturnObject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__SendersReturnObject
#define soap_POST_send_ns1__SendersReturnObject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__SendersReturnObject(soap, data), 0) || soap_put_ns1__SendersReturnObject(soap, data, "ns1:SendersReturnObject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__SendersReturnObject * SOAP_FMAC4 soap_get_ns1__SendersReturnObject(struct soap*, struct ns1__SendersReturnObject *, const char*, const char*);

#ifndef soap_read_ns1__SendersReturnObject
#define soap_read_ns1__SendersReturnObject(soap, data) ( ((data) ? (soap_default_ns1__SendersReturnObject(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__SendersReturnObject(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__SendersReturnObject
#define soap_GET_ns1__SendersReturnObject(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__SendersReturnObject(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__SendersReturnObject
#define soap_POST_recv_ns1__SendersReturnObject(soap, data) ( soap_read_ns1__SendersReturnObject(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ArrayOfConfigProfiles_DEFINED
#define SOAP_TYPE_ArrayOfConfigProfiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ArrayOfConfigProfiles(struct soap*, struct ArrayOfConfigProfiles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ArrayOfConfigProfiles(struct soap*, const struct ArrayOfConfigProfiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ArrayOfConfigProfiles(struct soap*, const char*, int, const struct ArrayOfConfigProfiles *, const char*);
SOAP_FMAC3 struct ArrayOfConfigProfiles * SOAP_FMAC4 soap_in_ArrayOfConfigProfiles(struct soap*, const char*, struct ArrayOfConfigProfiles *, const char*);

SOAP_FMAC3 struct ArrayOfConfigProfiles * SOAP_FMAC4 soap_new_ArrayOfConfigProfiles(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ArrayOfConfigProfiles(struct soap*, const struct ArrayOfConfigProfiles *, const char*, const char*);

#ifndef soap_write_ArrayOfConfigProfiles
#define soap_write_ArrayOfConfigProfiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ArrayOfConfigProfiles(soap, data), 0) || soap_put_ArrayOfConfigProfiles(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ArrayOfConfigProfiles
#define soap_PUT_ArrayOfConfigProfiles(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfConfigProfiles(soap, data), 0) || soap_put_ArrayOfConfigProfiles(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ArrayOfConfigProfiles
#define soap_POST_send_ArrayOfConfigProfiles(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfConfigProfiles(soap, data), 0) || soap_put_ArrayOfConfigProfiles(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ArrayOfConfigProfiles * SOAP_FMAC4 soap_get_ArrayOfConfigProfiles(struct soap*, struct ArrayOfConfigProfiles *, const char*, const char*);

#ifndef soap_read_ArrayOfConfigProfiles
#define soap_read_ArrayOfConfigProfiles(soap, data) ( ((data) ? (soap_default_ArrayOfConfigProfiles(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ArrayOfConfigProfiles(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ArrayOfConfigProfiles
#define soap_GET_ArrayOfConfigProfiles(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ArrayOfConfigProfiles(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ArrayOfConfigProfiles
#define soap_POST_recv_ArrayOfConfigProfiles(soap, data) ( soap_read_ArrayOfConfigProfiles(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__ConfigProfilesReturnObject_DEFINED
#define SOAP_TYPE_ns1__ConfigProfilesReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__ConfigProfilesReturnObject(struct soap*, struct ns1__ConfigProfilesReturnObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__ConfigProfilesReturnObject(struct soap*, const struct ns1__ConfigProfilesReturnObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ConfigProfilesReturnObject(struct soap*, const char*, int, const struct ns1__ConfigProfilesReturnObject *, const char*);
SOAP_FMAC3 struct ns1__ConfigProfilesReturnObject * SOAP_FMAC4 soap_in_ns1__ConfigProfilesReturnObject(struct soap*, const char*, struct ns1__ConfigProfilesReturnObject *, const char*);

SOAP_FMAC3 struct ns1__ConfigProfilesReturnObject * SOAP_FMAC4 soap_new_ns1__ConfigProfilesReturnObject(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__ConfigProfilesReturnObject(struct soap*, const struct ns1__ConfigProfilesReturnObject *, const char*, const char*);

#ifndef soap_write_ns1__ConfigProfilesReturnObject
#define soap_write_ns1__ConfigProfilesReturnObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__ConfigProfilesReturnObject(soap, data), 0) || soap_put_ns1__ConfigProfilesReturnObject(soap, data, "ns1:ConfigProfilesReturnObject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__ConfigProfilesReturnObject
#define soap_PUT_ns1__ConfigProfilesReturnObject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__ConfigProfilesReturnObject(soap, data), 0) || soap_put_ns1__ConfigProfilesReturnObject(soap, data, "ns1:ConfigProfilesReturnObject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__ConfigProfilesReturnObject
#define soap_POST_send_ns1__ConfigProfilesReturnObject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__ConfigProfilesReturnObject(soap, data), 0) || soap_put_ns1__ConfigProfilesReturnObject(soap, data, "ns1:ConfigProfilesReturnObject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__ConfigProfilesReturnObject * SOAP_FMAC4 soap_get_ns1__ConfigProfilesReturnObject(struct soap*, struct ns1__ConfigProfilesReturnObject *, const char*, const char*);

#ifndef soap_read_ns1__ConfigProfilesReturnObject
#define soap_read_ns1__ConfigProfilesReturnObject(soap, data) ( ((data) ? (soap_default_ns1__ConfigProfilesReturnObject(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__ConfigProfilesReturnObject(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__ConfigProfilesReturnObject
#define soap_GET_ns1__ConfigProfilesReturnObject(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__ConfigProfilesReturnObject(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__ConfigProfilesReturnObject
#define soap_POST_recv_ns1__ConfigProfilesReturnObject(soap, data) ( soap_read_ns1__ConfigProfilesReturnObject(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__BalanceReturnObject_DEFINED
#define SOAP_TYPE_ns1__BalanceReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__BalanceReturnObject(struct soap*, struct ns1__BalanceReturnObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__BalanceReturnObject(struct soap*, const struct ns1__BalanceReturnObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__BalanceReturnObject(struct soap*, const char*, int, const struct ns1__BalanceReturnObject *, const char*);
SOAP_FMAC3 struct ns1__BalanceReturnObject * SOAP_FMAC4 soap_in_ns1__BalanceReturnObject(struct soap*, const char*, struct ns1__BalanceReturnObject *, const char*);

SOAP_FMAC3 struct ns1__BalanceReturnObject * SOAP_FMAC4 soap_new_ns1__BalanceReturnObject(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__BalanceReturnObject(struct soap*, const struct ns1__BalanceReturnObject *, const char*, const char*);

#ifndef soap_write_ns1__BalanceReturnObject
#define soap_write_ns1__BalanceReturnObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__BalanceReturnObject(soap, data), 0) || soap_put_ns1__BalanceReturnObject(soap, data, "ns1:BalanceReturnObject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__BalanceReturnObject
#define soap_PUT_ns1__BalanceReturnObject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__BalanceReturnObject(soap, data), 0) || soap_put_ns1__BalanceReturnObject(soap, data, "ns1:BalanceReturnObject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__BalanceReturnObject
#define soap_POST_send_ns1__BalanceReturnObject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__BalanceReturnObject(soap, data), 0) || soap_put_ns1__BalanceReturnObject(soap, data, "ns1:BalanceReturnObject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__BalanceReturnObject * SOAP_FMAC4 soap_get_ns1__BalanceReturnObject(struct soap*, struct ns1__BalanceReturnObject *, const char*, const char*);

#ifndef soap_read_ns1__BalanceReturnObject
#define soap_read_ns1__BalanceReturnObject(soap, data) ( ((data) ? (soap_default_ns1__BalanceReturnObject(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__BalanceReturnObject(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__BalanceReturnObject
#define soap_GET_ns1__BalanceReturnObject(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__BalanceReturnObject(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__BalanceReturnObject
#define soap_POST_recv_ns1__BalanceReturnObject(soap, data) ( soap_read_ns1__BalanceReturnObject(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ArrayOfShipments_DEFINED
#define SOAP_TYPE_ArrayOfShipments_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ArrayOfShipments(struct soap*, struct ArrayOfShipments *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ArrayOfShipments(struct soap*, const struct ArrayOfShipments *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ArrayOfShipments(struct soap*, const char*, int, const struct ArrayOfShipments *, const char*);
SOAP_FMAC3 struct ArrayOfShipments * SOAP_FMAC4 soap_in_ArrayOfShipments(struct soap*, const char*, struct ArrayOfShipments *, const char*);

SOAP_FMAC3 struct ArrayOfShipments * SOAP_FMAC4 soap_new_ArrayOfShipments(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ArrayOfShipments(struct soap*, const struct ArrayOfShipments *, const char*, const char*);

#ifndef soap_write_ArrayOfShipments
#define soap_write_ArrayOfShipments(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ArrayOfShipments(soap, data), 0) || soap_put_ArrayOfShipments(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ArrayOfShipments
#define soap_PUT_ArrayOfShipments(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfShipments(soap, data), 0) || soap_put_ArrayOfShipments(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ArrayOfShipments
#define soap_POST_send_ArrayOfShipments(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ArrayOfShipments(soap, data), 0) || soap_put_ArrayOfShipments(soap, data, "SOAP-ENC:Array", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ArrayOfShipments * SOAP_FMAC4 soap_get_ArrayOfShipments(struct soap*, struct ArrayOfShipments *, const char*, const char*);

#ifndef soap_read_ArrayOfShipments
#define soap_read_ArrayOfShipments(soap, data) ( ((data) ? (soap_default_ArrayOfShipments(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ArrayOfShipments(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ArrayOfShipments
#define soap_GET_ArrayOfShipments(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ArrayOfShipments(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ArrayOfShipments
#define soap_POST_recv_ArrayOfShipments(soap, data) ( soap_read_ArrayOfShipments(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__DispatchReturnObject_DEFINED
#define SOAP_TYPE_ns1__DispatchReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__DispatchReturnObject(struct soap*, struct ns1__DispatchReturnObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__DispatchReturnObject(struct soap*, const struct ns1__DispatchReturnObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__DispatchReturnObject(struct soap*, const char*, int, const struct ns1__DispatchReturnObject *, const char*);
SOAP_FMAC3 struct ns1__DispatchReturnObject * SOAP_FMAC4 soap_in_ns1__DispatchReturnObject(struct soap*, const char*, struct ns1__DispatchReturnObject *, const char*);

SOAP_FMAC3 struct ns1__DispatchReturnObject * SOAP_FMAC4 soap_new_ns1__DispatchReturnObject(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__DispatchReturnObject(struct soap*, const struct ns1__DispatchReturnObject *, const char*, const char*);

#ifndef soap_write_ns1__DispatchReturnObject
#define soap_write_ns1__DispatchReturnObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__DispatchReturnObject(soap, data), 0) || soap_put_ns1__DispatchReturnObject(soap, data, "ns1:DispatchReturnObject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__DispatchReturnObject
#define soap_PUT_ns1__DispatchReturnObject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__DispatchReturnObject(soap, data), 0) || soap_put_ns1__DispatchReturnObject(soap, data, "ns1:DispatchReturnObject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__DispatchReturnObject
#define soap_POST_send_ns1__DispatchReturnObject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__DispatchReturnObject(soap, data), 0) || soap_put_ns1__DispatchReturnObject(soap, data, "ns1:DispatchReturnObject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__DispatchReturnObject * SOAP_FMAC4 soap_get_ns1__DispatchReturnObject(struct soap*, struct ns1__DispatchReturnObject *, const char*, const char*);

#ifndef soap_read_ns1__DispatchReturnObject
#define soap_read_ns1__DispatchReturnObject(soap, data) ( ((data) ? (soap_default_ns1__DispatchReturnObject(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__DispatchReturnObject(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__DispatchReturnObject
#define soap_GET_ns1__DispatchReturnObject(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__DispatchReturnObject(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__DispatchReturnObject
#define soap_POST_recv_ns1__DispatchReturnObject(soap, data) ( soap_read_ns1__DispatchReturnObject(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__SenderData_DEFINED
#define SOAP_TYPE_ns1__SenderData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__SenderData(struct soap*, struct ns1__SenderData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__SenderData(struct soap*, const struct ns1__SenderData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__SenderData(struct soap*, const char*, int, const struct ns1__SenderData *, const char*);
SOAP_FMAC3 struct ns1__SenderData * SOAP_FMAC4 soap_in_ns1__SenderData(struct soap*, const char*, struct ns1__SenderData *, const char*);

SOAP_FMAC3 struct ns1__SenderData * SOAP_FMAC4 soap_new_ns1__SenderData(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__SenderData(struct soap*, const struct ns1__SenderData *, const char*, const char*);

#ifndef soap_write_ns1__SenderData
#define soap_write_ns1__SenderData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__SenderData(soap, data), 0) || soap_put_ns1__SenderData(soap, data, "ns1:SenderData", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__SenderData
#define soap_PUT_ns1__SenderData(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__SenderData(soap, data), 0) || soap_put_ns1__SenderData(soap, data, "ns1:SenderData", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__SenderData
#define soap_POST_send_ns1__SenderData(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__SenderData(soap, data), 0) || soap_put_ns1__SenderData(soap, data, "ns1:SenderData", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__SenderData * SOAP_FMAC4 soap_get_ns1__SenderData(struct soap*, struct ns1__SenderData *, const char*, const char*);

#ifndef soap_read_ns1__SenderData
#define soap_read_ns1__SenderData(soap, data) ( ((data) ? (soap_default_ns1__SenderData(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__SenderData(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__SenderData
#define soap_GET_ns1__SenderData(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__SenderData(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__SenderData
#define soap_POST_recv_ns1__SenderData(soap, data) ( soap_read_ns1__SenderData(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__ShipmentPrice_DEFINED
#define SOAP_TYPE_ns1__ShipmentPrice_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__ShipmentPrice(struct soap*, struct ns1__ShipmentPrice *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__ShipmentPrice(struct soap*, const struct ns1__ShipmentPrice *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ShipmentPrice(struct soap*, const char*, int, const struct ns1__ShipmentPrice *, const char*);
SOAP_FMAC3 struct ns1__ShipmentPrice * SOAP_FMAC4 soap_in_ns1__ShipmentPrice(struct soap*, const char*, struct ns1__ShipmentPrice *, const char*);

SOAP_FMAC3 struct ns1__ShipmentPrice * SOAP_FMAC4 soap_new_ns1__ShipmentPrice(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__ShipmentPrice(struct soap*, const struct ns1__ShipmentPrice *, const char*, const char*);

#ifndef soap_write_ns1__ShipmentPrice
#define soap_write_ns1__ShipmentPrice(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__ShipmentPrice(soap, data), 0) || soap_put_ns1__ShipmentPrice(soap, data, "ns1:ShipmentPrice", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__ShipmentPrice
#define soap_PUT_ns1__ShipmentPrice(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__ShipmentPrice(soap, data), 0) || soap_put_ns1__ShipmentPrice(soap, data, "ns1:ShipmentPrice", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__ShipmentPrice
#define soap_POST_send_ns1__ShipmentPrice(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__ShipmentPrice(soap, data), 0) || soap_put_ns1__ShipmentPrice(soap, data, "ns1:ShipmentPrice", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__ShipmentPrice * SOAP_FMAC4 soap_get_ns1__ShipmentPrice(struct soap*, struct ns1__ShipmentPrice *, const char*, const char*);

#ifndef soap_read_ns1__ShipmentPrice
#define soap_read_ns1__ShipmentPrice(soap, data) ( ((data) ? (soap_default_ns1__ShipmentPrice(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__ShipmentPrice(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__ShipmentPrice
#define soap_GET_ns1__ShipmentPrice(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__ShipmentPrice(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__ShipmentPrice
#define soap_POST_recv_ns1__ShipmentPrice(soap, data) ( soap_read_ns1__ShipmentPrice(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__Sender_DEFINED
#define SOAP_TYPE_ns1__Sender_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__Sender(struct soap*, struct ns1__Sender *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__Sender(struct soap*, const struct ns1__Sender *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Sender(struct soap*, const char*, int, const struct ns1__Sender *, const char*);
SOAP_FMAC3 struct ns1__Sender * SOAP_FMAC4 soap_in_ns1__Sender(struct soap*, const char*, struct ns1__Sender *, const char*);

SOAP_FMAC3 struct ns1__Sender * SOAP_FMAC4 soap_new_ns1__Sender(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__Sender(struct soap*, const struct ns1__Sender *, const char*, const char*);

#ifndef soap_write_ns1__Sender
#define soap_write_ns1__Sender(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__Sender(soap, data), 0) || soap_put_ns1__Sender(soap, data, "ns1:Sender", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__Sender
#define soap_PUT_ns1__Sender(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__Sender(soap, data), 0) || soap_put_ns1__Sender(soap, data, "ns1:Sender", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__Sender
#define soap_POST_send_ns1__Sender(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__Sender(soap, data), 0) || soap_put_ns1__Sender(soap, data, "ns1:Sender", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__Sender * SOAP_FMAC4 soap_get_ns1__Sender(struct soap*, struct ns1__Sender *, const char*, const char*);

#ifndef soap_read_ns1__Sender
#define soap_read_ns1__Sender(soap, data) ( ((data) ? (soap_default_ns1__Sender(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__Sender(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__Sender
#define soap_GET_ns1__Sender(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__Sender(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__Sender
#define soap_POST_recv_ns1__Sender(soap, data) ( soap_read_ns1__Sender(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__ConfigProfile_DEFINED
#define SOAP_TYPE_ns1__ConfigProfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__ConfigProfile(struct soap*, struct ns1__ConfigProfile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__ConfigProfile(struct soap*, const struct ns1__ConfigProfile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ConfigProfile(struct soap*, const char*, int, const struct ns1__ConfigProfile *, const char*);
SOAP_FMAC3 struct ns1__ConfigProfile * SOAP_FMAC4 soap_in_ns1__ConfigProfile(struct soap*, const char*, struct ns1__ConfigProfile *, const char*);

SOAP_FMAC3 struct ns1__ConfigProfile * SOAP_FMAC4 soap_new_ns1__ConfigProfile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__ConfigProfile(struct soap*, const struct ns1__ConfigProfile *, const char*, const char*);

#ifndef soap_write_ns1__ConfigProfile
#define soap_write_ns1__ConfigProfile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__ConfigProfile(soap, data), 0) || soap_put_ns1__ConfigProfile(soap, data, "ns1:ConfigProfile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__ConfigProfile
#define soap_PUT_ns1__ConfigProfile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__ConfigProfile(soap, data), 0) || soap_put_ns1__ConfigProfile(soap, data, "ns1:ConfigProfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__ConfigProfile
#define soap_POST_send_ns1__ConfigProfile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__ConfigProfile(soap, data), 0) || soap_put_ns1__ConfigProfile(soap, data, "ns1:ConfigProfile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__ConfigProfile * SOAP_FMAC4 soap_get_ns1__ConfigProfile(struct soap*, struct ns1__ConfigProfile *, const char*, const char*);

#ifndef soap_read_ns1__ConfigProfile
#define soap_read_ns1__ConfigProfile(soap, data) ( ((data) ? (soap_default_ns1__ConfigProfile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__ConfigProfile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__ConfigProfile
#define soap_GET_ns1__ConfigProfile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__ConfigProfile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__ConfigProfile
#define soap_POST_recv_ns1__ConfigProfile(soap, data) ( soap_read_ns1__ConfigProfile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__Shipment_DEFINED
#define SOAP_TYPE_ns1__Shipment_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__Shipment(struct soap*, struct ns1__Shipment *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__Shipment(struct soap*, const struct ns1__Shipment *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Shipment(struct soap*, const char*, int, const struct ns1__Shipment *, const char*);
SOAP_FMAC3 struct ns1__Shipment * SOAP_FMAC4 soap_in_ns1__Shipment(struct soap*, const char*, struct ns1__Shipment *, const char*);

SOAP_FMAC3 struct ns1__Shipment * SOAP_FMAC4 soap_new_ns1__Shipment(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__Shipment(struct soap*, const struct ns1__Shipment *, const char*, const char*);

#ifndef soap_write_ns1__Shipment
#define soap_write_ns1__Shipment(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__Shipment(soap, data), 0) || soap_put_ns1__Shipment(soap, data, "ns1:Shipment", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__Shipment
#define soap_PUT_ns1__Shipment(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__Shipment(soap, data), 0) || soap_put_ns1__Shipment(soap, data, "ns1:Shipment", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__Shipment
#define soap_POST_send_ns1__Shipment(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__Shipment(soap, data), 0) || soap_put_ns1__Shipment(soap, data, "ns1:Shipment", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__Shipment * SOAP_FMAC4 soap_get_ns1__Shipment(struct soap*, struct ns1__Shipment *, const char*, const char*);

#ifndef soap_read_ns1__Shipment
#define soap_read_ns1__Shipment(soap, data) ( ((data) ? (soap_default_ns1__Shipment(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__Shipment(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__Shipment
#define soap_GET_ns1__Shipment(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__Shipment(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__Shipment
#define soap_POST_recv_ns1__Shipment(soap, data) ( soap_read_ns1__Shipment(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__Option_DEFINED
#define SOAP_TYPE_ns1__Option_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__Option(struct soap*, struct ns1__Option *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__Option(struct soap*, const struct ns1__Option *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Option(struct soap*, const char*, int, const struct ns1__Option *, const char*);
SOAP_FMAC3 struct ns1__Option * SOAP_FMAC4 soap_in_ns1__Option(struct soap*, const char*, struct ns1__Option *, const char*);

SOAP_FMAC3 struct ns1__Option * SOAP_FMAC4 soap_new_ns1__Option(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__Option(struct soap*, const struct ns1__Option *, const char*, const char*);

#ifndef soap_write_ns1__Option
#define soap_write_ns1__Option(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__Option(soap, data), 0) || soap_put_ns1__Option(soap, data, "ns1:Option", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__Option
#define soap_PUT_ns1__Option(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__Option(soap, data), 0) || soap_put_ns1__Option(soap, data, "ns1:Option", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__Option
#define soap_POST_send_ns1__Option(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__Option(soap, data), 0) || soap_put_ns1__Option(soap, data, "ns1:Option", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__Option * SOAP_FMAC4 soap_get_ns1__Option(struct soap*, struct ns1__Option *, const char*, const char*);

#ifndef soap_read_ns1__Option
#define soap_read_ns1__Option(soap, data) ( ((data) ? (soap_default_ns1__Option(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__Option(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__Option
#define soap_GET_ns1__Option(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__Option(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__Option
#define soap_POST_recv_ns1__Option(soap, data) ( soap_read_ns1__Option(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__Recipient_DEFINED
#define SOAP_TYPE_ns1__Recipient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__Recipient(struct soap*, struct ns1__Recipient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__Recipient(struct soap*, const struct ns1__Recipient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Recipient(struct soap*, const char*, int, const struct ns1__Recipient *, const char*);
SOAP_FMAC3 struct ns1__Recipient * SOAP_FMAC4 soap_in_ns1__Recipient(struct soap*, const char*, struct ns1__Recipient *, const char*);

SOAP_FMAC3 struct ns1__Recipient * SOAP_FMAC4 soap_new_ns1__Recipient(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__Recipient(struct soap*, const struct ns1__Recipient *, const char*, const char*);

#ifndef soap_write_ns1__Recipient
#define soap_write_ns1__Recipient(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__Recipient(soap, data), 0) || soap_put_ns1__Recipient(soap, data, "ns1:Recipient", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__Recipient
#define soap_PUT_ns1__Recipient(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__Recipient(soap, data), 0) || soap_put_ns1__Recipient(soap, data, "ns1:Recipient", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__Recipient
#define soap_POST_send_ns1__Recipient(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__Recipient(soap, data), 0) || soap_put_ns1__Recipient(soap, data, "ns1:Recipient", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__Recipient * SOAP_FMAC4 soap_get_ns1__Recipient(struct soap*, struct ns1__Recipient *, const char*, const char*);

#ifndef soap_read_ns1__Recipient
#define soap_read_ns1__Recipient(soap, data) ( ((data) ? (soap_default_ns1__Recipient(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__Recipient(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__Recipient
#define soap_GET_ns1__Recipient(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__Recipient(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__Recipient
#define soap_POST_recv_ns1__Recipient(soap, data) ( soap_read_ns1__Recipient(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__DocumentFile_DEFINED
#define SOAP_TYPE_ns1__DocumentFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__DocumentFile(struct soap*, struct ns1__DocumentFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__DocumentFile(struct soap*, const struct ns1__DocumentFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__DocumentFile(struct soap*, const char*, int, const struct ns1__DocumentFile *, const char*);
SOAP_FMAC3 struct ns1__DocumentFile * SOAP_FMAC4 soap_in_ns1__DocumentFile(struct soap*, const char*, struct ns1__DocumentFile *, const char*);

SOAP_FMAC3 struct ns1__DocumentFile * SOAP_FMAC4 soap_new_ns1__DocumentFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__DocumentFile(struct soap*, const struct ns1__DocumentFile *, const char*, const char*);

#ifndef soap_write_ns1__DocumentFile
#define soap_write_ns1__DocumentFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__DocumentFile(soap, data), 0) || soap_put_ns1__DocumentFile(soap, data, "ns1:DocumentFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__DocumentFile
#define soap_PUT_ns1__DocumentFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__DocumentFile(soap, data), 0) || soap_put_ns1__DocumentFile(soap, data, "ns1:DocumentFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__DocumentFile
#define soap_POST_send_ns1__DocumentFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__DocumentFile(soap, data), 0) || soap_put_ns1__DocumentFile(soap, data, "ns1:DocumentFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__DocumentFile * SOAP_FMAC4 soap_get_ns1__DocumentFile(struct soap*, struct ns1__DocumentFile *, const char*, const char*);

#ifndef soap_read_ns1__DocumentFile
#define soap_read_ns1__DocumentFile(soap, data) ( ((data) ? (soap_default_ns1__DocumentFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__DocumentFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__DocumentFile
#define soap_GET_ns1__DocumentFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__DocumentFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__DocumentFile
#define soap_POST_recv_ns1__DocumentFile(soap, data) ( soap_read_ns1__DocumentFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTons2__removeSenderResponse_DEFINED
#define SOAP_TYPE_PointerTons2__removeSenderResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__removeSenderResponse(struct soap*, struct ns2__removeSenderResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__removeSenderResponse(struct soap*, const char *, int, struct ns2__removeSenderResponse *const*, const char *);
SOAP_FMAC3 struct ns2__removeSenderResponse ** SOAP_FMAC4 soap_in_PointerTons2__removeSenderResponse(struct soap*, const char*, struct ns2__removeSenderResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__removeSenderResponse(struct soap*, struct ns2__removeSenderResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns2__removeSenderResponse ** SOAP_FMAC4 soap_get_PointerTons2__removeSenderResponse(struct soap*, struct ns2__removeSenderResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__RemoveSenderReturnObject_DEFINED
#define SOAP_TYPE_PointerTons1__RemoveSenderReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__RemoveSenderReturnObject(struct soap*, struct ns1__RemoveSenderReturnObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__RemoveSenderReturnObject(struct soap*, const char *, int, struct ns1__RemoveSenderReturnObject *const*, const char *);
SOAP_FMAC3 struct ns1__RemoveSenderReturnObject ** SOAP_FMAC4 soap_in_PointerTons1__RemoveSenderReturnObject(struct soap*, const char*, struct ns1__RemoveSenderReturnObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__RemoveSenderReturnObject(struct soap*, struct ns1__RemoveSenderReturnObject *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__RemoveSenderReturnObject ** SOAP_FMAC4 soap_get_PointerTons1__RemoveSenderReturnObject(struct soap*, struct ns1__RemoveSenderReturnObject **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons2__verifySenderResponse_DEFINED
#define SOAP_TYPE_PointerTons2__verifySenderResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__verifySenderResponse(struct soap*, struct ns2__verifySenderResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__verifySenderResponse(struct soap*, const char *, int, struct ns2__verifySenderResponse *const*, const char *);
SOAP_FMAC3 struct ns2__verifySenderResponse ** SOAP_FMAC4 soap_in_PointerTons2__verifySenderResponse(struct soap*, const char*, struct ns2__verifySenderResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__verifySenderResponse(struct soap*, struct ns2__verifySenderResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns2__verifySenderResponse ** SOAP_FMAC4 soap_get_PointerTons2__verifySenderResponse(struct soap*, struct ns2__verifySenderResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__VerifySenderReturnObject_DEFINED
#define SOAP_TYPE_PointerTons1__VerifySenderReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__VerifySenderReturnObject(struct soap*, struct ns1__VerifySenderReturnObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__VerifySenderReturnObject(struct soap*, const char *, int, struct ns1__VerifySenderReturnObject *const*, const char *);
SOAP_FMAC3 struct ns1__VerifySenderReturnObject ** SOAP_FMAC4 soap_in_PointerTons1__VerifySenderReturnObject(struct soap*, const char*, struct ns1__VerifySenderReturnObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__VerifySenderReturnObject(struct soap*, struct ns1__VerifySenderReturnObject *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__VerifySenderReturnObject ** SOAP_FMAC4 soap_get_PointerTons1__VerifySenderReturnObject(struct soap*, struct ns1__VerifySenderReturnObject **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons2__addSenderResponse_DEFINED
#define SOAP_TYPE_PointerTons2__addSenderResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__addSenderResponse(struct soap*, struct ns2__addSenderResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__addSenderResponse(struct soap*, const char *, int, struct ns2__addSenderResponse *const*, const char *);
SOAP_FMAC3 struct ns2__addSenderResponse ** SOAP_FMAC4 soap_in_PointerTons2__addSenderResponse(struct soap*, const char*, struct ns2__addSenderResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__addSenderResponse(struct soap*, struct ns2__addSenderResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns2__addSenderResponse ** SOAP_FMAC4 soap_get_PointerTons2__addSenderResponse(struct soap*, struct ns2__addSenderResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__SenderData_DEFINED
#define SOAP_TYPE_PointerTons1__SenderData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__SenderData(struct soap*, struct ns1__SenderData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__SenderData(struct soap*, const char *, int, struct ns1__SenderData *const*, const char *);
SOAP_FMAC3 struct ns1__SenderData ** SOAP_FMAC4 soap_in_PointerTons1__SenderData(struct soap*, const char*, struct ns1__SenderData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__SenderData(struct soap*, struct ns1__SenderData *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__SenderData ** SOAP_FMAC4 soap_get_PointerTons1__SenderData(struct soap*, struct ns1__SenderData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__AddSenderReturnObject_DEFINED
#define SOAP_TYPE_PointerTons1__AddSenderReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__AddSenderReturnObject(struct soap*, struct ns1__AddSenderReturnObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__AddSenderReturnObject(struct soap*, const char *, int, struct ns1__AddSenderReturnObject *const*, const char *);
SOAP_FMAC3 struct ns1__AddSenderReturnObject ** SOAP_FMAC4 soap_in_PointerTons1__AddSenderReturnObject(struct soap*, const char*, struct ns1__AddSenderReturnObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__AddSenderReturnObject(struct soap*, struct ns1__AddSenderReturnObject *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__AddSenderReturnObject ** SOAP_FMAC4 soap_get_PointerTons1__AddSenderReturnObject(struct soap*, struct ns1__AddSenderReturnObject **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons2__getPriceResponse_DEFINED
#define SOAP_TYPE_PointerTons2__getPriceResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__getPriceResponse(struct soap*, struct ns2__getPriceResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__getPriceResponse(struct soap*, const char *, int, struct ns2__getPriceResponse *const*, const char *);
SOAP_FMAC3 struct ns2__getPriceResponse ** SOAP_FMAC4 soap_in_PointerTons2__getPriceResponse(struct soap*, const char*, struct ns2__getPriceResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__getPriceResponse(struct soap*, struct ns2__getPriceResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns2__getPriceResponse ** SOAP_FMAC4 soap_get_PointerTons2__getPriceResponse(struct soap*, struct ns2__getPriceResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__PriceReturnObject_DEFINED
#define SOAP_TYPE_PointerTons1__PriceReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__PriceReturnObject(struct soap*, struct ns1__PriceReturnObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__PriceReturnObject(struct soap*, const char *, int, struct ns1__PriceReturnObject *const*, const char *);
SOAP_FMAC3 struct ns1__PriceReturnObject ** SOAP_FMAC4 soap_in_PointerTons1__PriceReturnObject(struct soap*, const char*, struct ns1__PriceReturnObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__PriceReturnObject(struct soap*, struct ns1__PriceReturnObject *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__PriceReturnObject ** SOAP_FMAC4 soap_get_PointerTons1__PriceReturnObject(struct soap*, struct ns1__PriceReturnObject **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons2__getCertificateResponse_DEFINED
#define SOAP_TYPE_PointerTons2__getCertificateResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__getCertificateResponse(struct soap*, struct ns2__getCertificateResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__getCertificateResponse(struct soap*, const char *, int, struct ns2__getCertificateResponse *const*, const char *);
SOAP_FMAC3 struct ns2__getCertificateResponse ** SOAP_FMAC4 soap_in_PointerTons2__getCertificateResponse(struct soap*, const char*, struct ns2__getCertificateResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__getCertificateResponse(struct soap*, struct ns2__getCertificateResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns2__getCertificateResponse ** SOAP_FMAC4 soap_get_PointerTons2__getCertificateResponse(struct soap*, struct ns2__getCertificateResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__CertificateReturnObject_DEFINED
#define SOAP_TYPE_PointerTons1__CertificateReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__CertificateReturnObject(struct soap*, struct ns1__CertificateReturnObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__CertificateReturnObject(struct soap*, const char *, int, struct ns1__CertificateReturnObject *const*, const char *);
SOAP_FMAC3 struct ns1__CertificateReturnObject ** SOAP_FMAC4 soap_in_PointerTons1__CertificateReturnObject(struct soap*, const char*, struct ns1__CertificateReturnObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__CertificateReturnObject(struct soap*, struct ns1__CertificateReturnObject *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__CertificateReturnObject ** SOAP_FMAC4 soap_get_PointerTons1__CertificateReturnObject(struct soap*, struct ns1__CertificateReturnObject **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons2__getSendersResponse_DEFINED
#define SOAP_TYPE_PointerTons2__getSendersResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__getSendersResponse(struct soap*, struct ns2__getSendersResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__getSendersResponse(struct soap*, const char *, int, struct ns2__getSendersResponse *const*, const char *);
SOAP_FMAC3 struct ns2__getSendersResponse ** SOAP_FMAC4 soap_in_PointerTons2__getSendersResponse(struct soap*, const char*, struct ns2__getSendersResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__getSendersResponse(struct soap*, struct ns2__getSendersResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns2__getSendersResponse ** SOAP_FMAC4 soap_get_PointerTons2__getSendersResponse(struct soap*, struct ns2__getSendersResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__SendersReturnObject_DEFINED
#define SOAP_TYPE_PointerTons1__SendersReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__SendersReturnObject(struct soap*, struct ns1__SendersReturnObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__SendersReturnObject(struct soap*, const char *, int, struct ns1__SendersReturnObject *const*, const char *);
SOAP_FMAC3 struct ns1__SendersReturnObject ** SOAP_FMAC4 soap_in_PointerTons1__SendersReturnObject(struct soap*, const char*, struct ns1__SendersReturnObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__SendersReturnObject(struct soap*, struct ns1__SendersReturnObject *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__SendersReturnObject ** SOAP_FMAC4 soap_get_PointerTons1__SendersReturnObject(struct soap*, struct ns1__SendersReturnObject **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons2__getConfigProfilesResponse_DEFINED
#define SOAP_TYPE_PointerTons2__getConfigProfilesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__getConfigProfilesResponse(struct soap*, struct ns2__getConfigProfilesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__getConfigProfilesResponse(struct soap*, const char *, int, struct ns2__getConfigProfilesResponse *const*, const char *);
SOAP_FMAC3 struct ns2__getConfigProfilesResponse ** SOAP_FMAC4 soap_in_PointerTons2__getConfigProfilesResponse(struct soap*, const char*, struct ns2__getConfigProfilesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__getConfigProfilesResponse(struct soap*, struct ns2__getConfigProfilesResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns2__getConfigProfilesResponse ** SOAP_FMAC4 soap_get_PointerTons2__getConfigProfilesResponse(struct soap*, struct ns2__getConfigProfilesResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__ConfigProfilesReturnObject_DEFINED
#define SOAP_TYPE_PointerTons1__ConfigProfilesReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ConfigProfilesReturnObject(struct soap*, struct ns1__ConfigProfilesReturnObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ConfigProfilesReturnObject(struct soap*, const char *, int, struct ns1__ConfigProfilesReturnObject *const*, const char *);
SOAP_FMAC3 struct ns1__ConfigProfilesReturnObject ** SOAP_FMAC4 soap_in_PointerTons1__ConfigProfilesReturnObject(struct soap*, const char*, struct ns1__ConfigProfilesReturnObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ConfigProfilesReturnObject(struct soap*, struct ns1__ConfigProfilesReturnObject *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__ConfigProfilesReturnObject ** SOAP_FMAC4 soap_get_PointerTons1__ConfigProfilesReturnObject(struct soap*, struct ns1__ConfigProfilesReturnObject **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons2__getBalanceResponse_DEFINED
#define SOAP_TYPE_PointerTons2__getBalanceResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__getBalanceResponse(struct soap*, struct ns2__getBalanceResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__getBalanceResponse(struct soap*, const char *, int, struct ns2__getBalanceResponse *const*, const char *);
SOAP_FMAC3 struct ns2__getBalanceResponse ** SOAP_FMAC4 soap_in_PointerTons2__getBalanceResponse(struct soap*, const char*, struct ns2__getBalanceResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__getBalanceResponse(struct soap*, struct ns2__getBalanceResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns2__getBalanceResponse ** SOAP_FMAC4 soap_get_PointerTons2__getBalanceResponse(struct soap*, struct ns2__getBalanceResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__BalanceReturnObject_DEFINED
#define SOAP_TYPE_PointerTons1__BalanceReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__BalanceReturnObject(struct soap*, struct ns1__BalanceReturnObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__BalanceReturnObject(struct soap*, const char *, int, struct ns1__BalanceReturnObject *const*, const char *);
SOAP_FMAC3 struct ns1__BalanceReturnObject ** SOAP_FMAC4 soap_in_PointerTons1__BalanceReturnObject(struct soap*, const char*, struct ns1__BalanceReturnObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__BalanceReturnObject(struct soap*, struct ns1__BalanceReturnObject *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__BalanceReturnObject ** SOAP_FMAC4 soap_get_PointerTons1__BalanceReturnObject(struct soap*, struct ns1__BalanceReturnObject **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons2__getDispatchStatusResponse_DEFINED
#define SOAP_TYPE_PointerTons2__getDispatchStatusResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__getDispatchStatusResponse(struct soap*, struct ns2__getDispatchStatusResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__getDispatchStatusResponse(struct soap*, const char *, int, struct ns2__getDispatchStatusResponse *const*, const char *);
SOAP_FMAC3 struct ns2__getDispatchStatusResponse ** SOAP_FMAC4 soap_in_PointerTons2__getDispatchStatusResponse(struct soap*, const char*, struct ns2__getDispatchStatusResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__getDispatchStatusResponse(struct soap*, struct ns2__getDispatchStatusResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns2__getDispatchStatusResponse ** SOAP_FMAC4 soap_get_PointerTons2__getDispatchStatusResponse(struct soap*, struct ns2__getDispatchStatusResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToArrayOfDispatchIds_DEFINED
#define SOAP_TYPE_PointerToArrayOfDispatchIds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToArrayOfDispatchIds(struct soap*, struct ArrayOfDispatchIds *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToArrayOfDispatchIds(struct soap*, const char *, int, struct ArrayOfDispatchIds *const*, const char *);
SOAP_FMAC3 struct ArrayOfDispatchIds ** SOAP_FMAC4 soap_in_PointerToArrayOfDispatchIds(struct soap*, const char*, struct ArrayOfDispatchIds **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToArrayOfDispatchIds(struct soap*, struct ArrayOfDispatchIds *const*, const char*, const char*);
SOAP_FMAC3 struct ArrayOfDispatchIds ** SOAP_FMAC4 soap_get_PointerToArrayOfDispatchIds(struct soap*, struct ArrayOfDispatchIds **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons2__dispatchResponse_DEFINED
#define SOAP_TYPE_PointerTons2__dispatchResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__dispatchResponse(struct soap*, struct ns2__dispatchResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__dispatchResponse(struct soap*, const char *, int, struct ns2__dispatchResponse *const*, const char *);
SOAP_FMAC3 struct ns2__dispatchResponse ** SOAP_FMAC4 soap_in_PointerTons2__dispatchResponse(struct soap*, const char*, struct ns2__dispatchResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__dispatchResponse(struct soap*, struct ns2__dispatchResponse *const*, const char*, const char*);
SOAP_FMAC3 struct ns2__dispatchResponse ** SOAP_FMAC4 soap_get_PointerTons2__dispatchResponse(struct soap*, struct ns2__dispatchResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToArrayOfOptions_DEFINED
#define SOAP_TYPE_PointerToArrayOfOptions_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToArrayOfOptions(struct soap*, struct ArrayOfOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToArrayOfOptions(struct soap*, const char *, int, struct ArrayOfOptions *const*, const char *);
SOAP_FMAC3 struct ArrayOfOptions ** SOAP_FMAC4 soap_in_PointerToArrayOfOptions(struct soap*, const char*, struct ArrayOfOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToArrayOfOptions(struct soap*, struct ArrayOfOptions *const*, const char*, const char*);
SOAP_FMAC3 struct ArrayOfOptions ** SOAP_FMAC4 soap_get_PointerToArrayOfOptions(struct soap*, struct ArrayOfOptions **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToArrayOfRecipients_DEFINED
#define SOAP_TYPE_PointerToArrayOfRecipients_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToArrayOfRecipients(struct soap*, struct ArrayOfRecipients *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToArrayOfRecipients(struct soap*, const char *, int, struct ArrayOfRecipients *const*, const char *);
SOAP_FMAC3 struct ArrayOfRecipients ** SOAP_FMAC4 soap_in_PointerToArrayOfRecipients(struct soap*, const char*, struct ArrayOfRecipients **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToArrayOfRecipients(struct soap*, struct ArrayOfRecipients *const*, const char*, const char*);
SOAP_FMAC3 struct ArrayOfRecipients ** SOAP_FMAC4 soap_get_PointerToArrayOfRecipients(struct soap*, struct ArrayOfRecipients **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToArrayOfDocumentFiles_DEFINED
#define SOAP_TYPE_PointerToArrayOfDocumentFiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToArrayOfDocumentFiles(struct soap*, struct ArrayOfDocumentFiles *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToArrayOfDocumentFiles(struct soap*, const char *, int, struct ArrayOfDocumentFiles *const*, const char *);
SOAP_FMAC3 struct ArrayOfDocumentFiles ** SOAP_FMAC4 soap_in_PointerToArrayOfDocumentFiles(struct soap*, const char*, struct ArrayOfDocumentFiles **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToArrayOfDocumentFiles(struct soap*, struct ArrayOfDocumentFiles *const*, const char*, const char*);
SOAP_FMAC3 struct ArrayOfDocumentFiles ** SOAP_FMAC4 soap_get_PointerToArrayOfDocumentFiles(struct soap*, struct ArrayOfDocumentFiles **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__DispatchReturnObject_DEFINED
#define SOAP_TYPE_PointerTons1__DispatchReturnObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__DispatchReturnObject(struct soap*, struct ns1__DispatchReturnObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__DispatchReturnObject(struct soap*, const char *, int, struct ns1__DispatchReturnObject *const*, const char *);
SOAP_FMAC3 struct ns1__DispatchReturnObject ** SOAP_FMAC4 soap_in_PointerTons1__DispatchReturnObject(struct soap*, const char*, struct ns1__DispatchReturnObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__DispatchReturnObject(struct soap*, struct ns1__DispatchReturnObject *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__DispatchReturnObject ** SOAP_FMAC4 soap_get_PointerTons1__DispatchReturnObject(struct soap*, struct ns1__DispatchReturnObject **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTons1__ShipmentPrice_DEFINED
#define SOAP_TYPE_PointerToPointerTons1__ShipmentPrice_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__ShipmentPrice(struct soap*, struct ns1__ShipmentPrice **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__ShipmentPrice(struct soap*, const char *, int, struct ns1__ShipmentPrice **const*, const char *);
SOAP_FMAC3 struct ns1__ShipmentPrice *** SOAP_FMAC4 soap_in_PointerToPointerTons1__ShipmentPrice(struct soap*, const char*, struct ns1__ShipmentPrice ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__ShipmentPrice(struct soap*, struct ns1__ShipmentPrice **const*, const char*, const char*);
SOAP_FMAC3 struct ns1__ShipmentPrice *** SOAP_FMAC4 soap_get_PointerToPointerTons1__ShipmentPrice(struct soap*, struct ns1__ShipmentPrice ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__ShipmentPrice_DEFINED
#define SOAP_TYPE_PointerTons1__ShipmentPrice_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ShipmentPrice(struct soap*, struct ns1__ShipmentPrice *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ShipmentPrice(struct soap*, const char *, int, struct ns1__ShipmentPrice *const*, const char *);
SOAP_FMAC3 struct ns1__ShipmentPrice ** SOAP_FMAC4 soap_in_PointerTons1__ShipmentPrice(struct soap*, const char*, struct ns1__ShipmentPrice **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ShipmentPrice(struct soap*, struct ns1__ShipmentPrice *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__ShipmentPrice ** SOAP_FMAC4 soap_get_PointerTons1__ShipmentPrice(struct soap*, struct ns1__ShipmentPrice **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTons1__Sender_DEFINED
#define SOAP_TYPE_PointerToPointerTons1__Sender_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__Sender(struct soap*, struct ns1__Sender **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__Sender(struct soap*, const char *, int, struct ns1__Sender **const*, const char *);
SOAP_FMAC3 struct ns1__Sender *** SOAP_FMAC4 soap_in_PointerToPointerTons1__Sender(struct soap*, const char*, struct ns1__Sender ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__Sender(struct soap*, struct ns1__Sender **const*, const char*, const char*);
SOAP_FMAC3 struct ns1__Sender *** SOAP_FMAC4 soap_get_PointerToPointerTons1__Sender(struct soap*, struct ns1__Sender ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__Sender_DEFINED
#define SOAP_TYPE_PointerTons1__Sender_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Sender(struct soap*, struct ns1__Sender *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Sender(struct soap*, const char *, int, struct ns1__Sender *const*, const char *);
SOAP_FMAC3 struct ns1__Sender ** SOAP_FMAC4 soap_in_PointerTons1__Sender(struct soap*, const char*, struct ns1__Sender **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Sender(struct soap*, struct ns1__Sender *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__Sender ** SOAP_FMAC4 soap_get_PointerTons1__Sender(struct soap*, struct ns1__Sender **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTons1__ConfigProfile_DEFINED
#define SOAP_TYPE_PointerToPointerTons1__ConfigProfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__ConfigProfile(struct soap*, struct ns1__ConfigProfile **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__ConfigProfile(struct soap*, const char *, int, struct ns1__ConfigProfile **const*, const char *);
SOAP_FMAC3 struct ns1__ConfigProfile *** SOAP_FMAC4 soap_in_PointerToPointerTons1__ConfigProfile(struct soap*, const char*, struct ns1__ConfigProfile ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__ConfigProfile(struct soap*, struct ns1__ConfigProfile **const*, const char*, const char*);
SOAP_FMAC3 struct ns1__ConfigProfile *** SOAP_FMAC4 soap_get_PointerToPointerTons1__ConfigProfile(struct soap*, struct ns1__ConfigProfile ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__ConfigProfile_DEFINED
#define SOAP_TYPE_PointerTons1__ConfigProfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ConfigProfile(struct soap*, struct ns1__ConfigProfile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ConfigProfile(struct soap*, const char *, int, struct ns1__ConfigProfile *const*, const char *);
SOAP_FMAC3 struct ns1__ConfigProfile ** SOAP_FMAC4 soap_in_PointerTons1__ConfigProfile(struct soap*, const char*, struct ns1__ConfigProfile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ConfigProfile(struct soap*, struct ns1__ConfigProfile *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__ConfigProfile ** SOAP_FMAC4 soap_get_PointerTons1__ConfigProfile(struct soap*, struct ns1__ConfigProfile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTostring_DEFINED
#define SOAP_TYPE_PointerTostring_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostring(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostring(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTostring(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostring(struct soap*, char **const*, const char*, const char*);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTostring(struct soap*, char ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTons1__Shipment_DEFINED
#define SOAP_TYPE_PointerToPointerTons1__Shipment_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__Shipment(struct soap*, struct ns1__Shipment **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__Shipment(struct soap*, const char *, int, struct ns1__Shipment **const*, const char *);
SOAP_FMAC3 struct ns1__Shipment *** SOAP_FMAC4 soap_in_PointerToPointerTons1__Shipment(struct soap*, const char*, struct ns1__Shipment ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__Shipment(struct soap*, struct ns1__Shipment **const*, const char*, const char*);
SOAP_FMAC3 struct ns1__Shipment *** SOAP_FMAC4 soap_get_PointerToPointerTons1__Shipment(struct soap*, struct ns1__Shipment ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__Shipment_DEFINED
#define SOAP_TYPE_PointerTons1__Shipment_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Shipment(struct soap*, struct ns1__Shipment *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Shipment(struct soap*, const char *, int, struct ns1__Shipment *const*, const char *);
SOAP_FMAC3 struct ns1__Shipment ** SOAP_FMAC4 soap_in_PointerTons1__Shipment(struct soap*, const char*, struct ns1__Shipment **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Shipment(struct soap*, struct ns1__Shipment *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__Shipment ** SOAP_FMAC4 soap_get_PointerTons1__Shipment(struct soap*, struct ns1__Shipment **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTons1__Option_DEFINED
#define SOAP_TYPE_PointerToPointerTons1__Option_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__Option(struct soap*, struct ns1__Option **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__Option(struct soap*, const char *, int, struct ns1__Option **const*, const char *);
SOAP_FMAC3 struct ns1__Option *** SOAP_FMAC4 soap_in_PointerToPointerTons1__Option(struct soap*, const char*, struct ns1__Option ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__Option(struct soap*, struct ns1__Option **const*, const char*, const char*);
SOAP_FMAC3 struct ns1__Option *** SOAP_FMAC4 soap_get_PointerToPointerTons1__Option(struct soap*, struct ns1__Option ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__Option_DEFINED
#define SOAP_TYPE_PointerTons1__Option_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Option(struct soap*, struct ns1__Option *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Option(struct soap*, const char *, int, struct ns1__Option *const*, const char *);
SOAP_FMAC3 struct ns1__Option ** SOAP_FMAC4 soap_in_PointerTons1__Option(struct soap*, const char*, struct ns1__Option **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Option(struct soap*, struct ns1__Option *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__Option ** SOAP_FMAC4 soap_get_PointerTons1__Option(struct soap*, struct ns1__Option **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTons1__Recipient_DEFINED
#define SOAP_TYPE_PointerToPointerTons1__Recipient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__Recipient(struct soap*, struct ns1__Recipient **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__Recipient(struct soap*, const char *, int, struct ns1__Recipient **const*, const char *);
SOAP_FMAC3 struct ns1__Recipient *** SOAP_FMAC4 soap_in_PointerToPointerTons1__Recipient(struct soap*, const char*, struct ns1__Recipient ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__Recipient(struct soap*, struct ns1__Recipient **const*, const char*, const char*);
SOAP_FMAC3 struct ns1__Recipient *** SOAP_FMAC4 soap_get_PointerToPointerTons1__Recipient(struct soap*, struct ns1__Recipient ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__Recipient_DEFINED
#define SOAP_TYPE_PointerTons1__Recipient_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Recipient(struct soap*, struct ns1__Recipient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Recipient(struct soap*, const char *, int, struct ns1__Recipient *const*, const char *);
SOAP_FMAC3 struct ns1__Recipient ** SOAP_FMAC4 soap_in_PointerTons1__Recipient(struct soap*, const char*, struct ns1__Recipient **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Recipient(struct soap*, struct ns1__Recipient *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__Recipient ** SOAP_FMAC4 soap_get_PointerTons1__Recipient(struct soap*, struct ns1__Recipient **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTons1__DocumentFile_DEFINED
#define SOAP_TYPE_PointerToPointerTons1__DocumentFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__DocumentFile(struct soap*, struct ns1__DocumentFile **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__DocumentFile(struct soap*, const char *, int, struct ns1__DocumentFile **const*, const char *);
SOAP_FMAC3 struct ns1__DocumentFile *** SOAP_FMAC4 soap_in_PointerToPointerTons1__DocumentFile(struct soap*, const char*, struct ns1__DocumentFile ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__DocumentFile(struct soap*, struct ns1__DocumentFile **const*, const char*, const char*);
SOAP_FMAC3 struct ns1__DocumentFile *** SOAP_FMAC4 soap_get_PointerToPointerTons1__DocumentFile(struct soap*, struct ns1__DocumentFile ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__DocumentFile_DEFINED
#define SOAP_TYPE_PointerTons1__DocumentFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__DocumentFile(struct soap*, struct ns1__DocumentFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__DocumentFile(struct soap*, const char *, int, struct ns1__DocumentFile *const*, const char *);
SOAP_FMAC3 struct ns1__DocumentFile ** SOAP_FMAC4 soap_in_PointerTons1__DocumentFile(struct soap*, const char*, struct ns1__DocumentFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__DocumentFile(struct soap*, struct ns1__DocumentFile *const*, const char*, const char*);
SOAP_FMAC3 struct ns1__DocumentFile ** SOAP_FMAC4 soap_get_PointerTons1__DocumentFile(struct soap*, struct ns1__DocumentFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToArrayOfShipmentsPrice_DEFINED
#define SOAP_TYPE_PointerToArrayOfShipmentsPrice_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToArrayOfShipmentsPrice(struct soap*, struct ArrayOfShipmentsPrice *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToArrayOfShipmentsPrice(struct soap*, const char *, int, struct ArrayOfShipmentsPrice *const*, const char *);
SOAP_FMAC3 struct ArrayOfShipmentsPrice ** SOAP_FMAC4 soap_in_PointerToArrayOfShipmentsPrice(struct soap*, const char*, struct ArrayOfShipmentsPrice **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToArrayOfShipmentsPrice(struct soap*, struct ArrayOfShipmentsPrice *const*, const char*, const char*);
SOAP_FMAC3 struct ArrayOfShipmentsPrice ** SOAP_FMAC4 soap_get_PointerToArrayOfShipmentsPrice(struct soap*, struct ArrayOfShipmentsPrice **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToArrayOfSenders_DEFINED
#define SOAP_TYPE_PointerToArrayOfSenders_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToArrayOfSenders(struct soap*, struct ArrayOfSenders *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToArrayOfSenders(struct soap*, const char *, int, struct ArrayOfSenders *const*, const char *);
SOAP_FMAC3 struct ArrayOfSenders ** SOAP_FMAC4 soap_in_PointerToArrayOfSenders(struct soap*, const char*, struct ArrayOfSenders **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToArrayOfSenders(struct soap*, struct ArrayOfSenders *const*, const char*, const char*);
SOAP_FMAC3 struct ArrayOfSenders ** SOAP_FMAC4 soap_get_PointerToArrayOfSenders(struct soap*, struct ArrayOfSenders **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToArrayOfConfigProfiles_DEFINED
#define SOAP_TYPE_PointerToArrayOfConfigProfiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToArrayOfConfigProfiles(struct soap*, struct ArrayOfConfigProfiles *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToArrayOfConfigProfiles(struct soap*, const char *, int, struct ArrayOfConfigProfiles *const*, const char *);
SOAP_FMAC3 struct ArrayOfConfigProfiles ** SOAP_FMAC4 soap_in_PointerToArrayOfConfigProfiles(struct soap*, const char*, struct ArrayOfConfigProfiles **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToArrayOfConfigProfiles(struct soap*, struct ArrayOfConfigProfiles *const*, const char*, const char*);
SOAP_FMAC3 struct ArrayOfConfigProfiles ** SOAP_FMAC4 soap_get_PointerToArrayOfConfigProfiles(struct soap*, struct ArrayOfConfigProfiles **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToArrayOfShipments_DEFINED
#define SOAP_TYPE_PointerToArrayOfShipments_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToArrayOfShipments(struct soap*, struct ArrayOfShipments *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToArrayOfShipments(struct soap*, const char *, int, struct ArrayOfShipments *const*, const char *);
SOAP_FMAC3 struct ArrayOfShipments ** SOAP_FMAC4 soap_in_PointerToArrayOfShipments(struct soap*, const char*, struct ArrayOfShipments **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToArrayOfShipments(struct soap*, struct ArrayOfShipments *const*, const char*, const char*);
SOAP_FMAC3 struct ArrayOfShipments ** SOAP_FMAC4 soap_get_PointerToArrayOfShipments(struct soap*, struct ArrayOfShipments **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTofloat_DEFINED
#define SOAP_TYPE_PointerTofloat_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTofloat(struct soap*, float *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTofloat(struct soap*, const char *, int, float *const*, const char *);
SOAP_FMAC3 float ** SOAP_FMAC4 soap_in_PointerTofloat(struct soap*, const char*, float **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTofloat(struct soap*, float *const*, const char*, const char*);
SOAP_FMAC3 float ** SOAP_FMAC4 soap_get_PointerTofloat(struct soap*, float **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToint_DEFINED
#define SOAP_TYPE_PointerToint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

#ifdef SOAP_DEFAULT__QName
#define soap_default__QName(soap, a) (*(a) = SOAP_DEFAULT__QName)
#else
#define soap_default__QName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__QName
#define soap_PUT__QName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__QName
#define soap_POST_send__QName(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__QName
#define soap_GET__QName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__QName(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__QName
#define soap_POST_recv__QName(soap, data) ( soap_read__QName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

#ifdef SOAP_DEFAULT_string
#define soap_default_string(soap, a) (*(a) = SOAP_DEFAULT_string)
#else
#define soap_default_string(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_string
#define soap_PUT_string(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_string
#define soap_POST_send_string(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_string
#define soap_GET_string(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_string(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_string
#define soap_POST_recv_string(soap, data) ( soap_read_string(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
